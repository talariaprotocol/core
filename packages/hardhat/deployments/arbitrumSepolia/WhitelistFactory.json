{
  "address": "0x22f5e0BBD7Dcbc65363a71ee06cF321c3ff56B0F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVerifier",
          "name": "_verifier",
          "type": "address"
        },
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_merkleTreeHeight",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "whitelist",
          "type": "address"
        }
      ],
      "name": "WhitelistCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_newHasher",
          "type": "address"
        }
      ],
      "name": "changeDefaultHasher",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_newMerkleTreeHeight",
          "type": "uint32"
        }
      ],
      "name": "changeDefaultMerkleTreeHeight",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IVerifier",
          "name": "_newVerifier",
          "type": "address"
        }
      ],
      "name": "changeDefaultVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "create",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createTalariaInstance",
      "outputs": [
        {
          "internalType": "contract TalariaProtocol",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2d59ef529260213676da6ad5f9d61ca3ccd188bd83e13f34a7e63a884e7b2bd8",
  "receipt": {
    "to": null,
    "from": "0xEB71ed911e4dFc35Da80103a72fE983C8c709F33",
    "contractAddress": "0x22f5e0BBD7Dcbc65363a71ee06cF321c3ff56B0F",
    "transactionIndex": 6,
    "gasUsed": "4631219",
    "logsBloom": "0x00000000000000000000000000040000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000100000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000004000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000820000000000000000001000000000000000000000000000000000000000000000000",
    "blockHash": "0x4628ecc74ec63f77f7519acd9d8d5dd16212b37e9480db8a3e1ef21dfb306861",
    "transactionHash": "0x2d59ef529260213676da6ad5f9d61ca3ccd188bd83e13f34a7e63a884e7b2bd8",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 87316539,
        "transactionHash": "0x2d59ef529260213676da6ad5f9d61ca3ccd188bd83e13f34a7e63a884e7b2bd8",
        "address": "0x22f5e0BBD7Dcbc65363a71ee06cF321c3ff56B0F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000eb71ed911e4dfc35da80103a72fe983c8c709f33"
        ],
        "data": "0x",
        "logIndex": 12,
        "blockHash": "0x4628ecc74ec63f77f7519acd9d8d5dd16212b37e9480db8a3e1ef21dfb306861"
      }
    ],
    "blockNumber": 87316539,
    "cumulativeGasUsed": "5568174",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1889812B384a273F308de9C2Ccbd75B353905A23",
    "0x537d630b33B2CEE5282231B0A0c5aFB96A63Be19",
    10
  ],
  "numDeployments": 7,
  "solcInputHash": "046dd8a64855ba842c698cbcb5daa67e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_merkleTreeHeight\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whitelist\",\"type\":\"address\"}],\"name\":\"WhitelistCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"_newHasher\",\"type\":\"address\"}],\"name\":\"changeDefaultHasher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_newMerkleTreeHeight\",\"type\":\"uint32\"}],\"name\":\"changeDefaultMerkleTreeHeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"_newVerifier\",\"type\":\"address\"}],\"name\":\"changeDefaultVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createTalariaInstance\",\"outputs\":[{\"internalType\":\"contract TalariaProtocol\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/useCases/whitelist/WhitelistFactory.sol\":\"WhitelistFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/TalariaProtocol.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"./helpers/MerkleTreeWithHistory.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\nimport \\\"./modules/IValidationModule.sol\\\";\\n\\ninterface IVerifier {\\n  function verifyProof(bytes memory _proof, uint256[6] memory _input) external returns (bool);\\n}\\n\\ncontract TalariaProtocol is MerkleTreeWithHistory, ReentrancyGuard {\\n  IVerifier public immutable verifier;\\n \\n  mapping(bytes32 => bool) public nullifierHashes;\\n  // we store all commitments just to prevent accidental creations with the same commitment\\n  mapping(bytes32 => bool) public commitments;\\n\\n  // commitments to validation modules \\n  mapping(bytes32 => address[]) public validationModules;\\n\\n  event NewCode(bytes32 indexed commitment, uint32 leafIndex, uint256 timestamp);\\n  event ConsumeCode(address to, bytes32 nullifierHash, uint256 timestamp);\\n\\n  /**\\n    @dev The constructor\\n    @param _verifier the address of SNARK verifier for this contract\\n    @param _hasher the address of MiMC hash contract\\n    @param _merkleTreeHeight the height of codes' Merkle Tree\\n  */\\n  constructor(\\n    IVerifier _verifier,\\n    IHasher _hasher,\\n    uint32 _merkleTreeHeight\\n  ) MerkleTreeWithHistory(_merkleTreeHeight, _hasher) {\\n    verifier = _verifier;\\n  }\\n\\n  /**\\n    @dev Set new code.\\n    @param _commitment the note commitment, which is PedersenHash(nullifier + secret)\\n  */\\n  function setCode(bytes32 _commitment, address[] calldata _validationModules) public virtual payable nonReentrant {\\n    require(!commitments[_commitment], \\\"The commitment has been submitted\\\");\\n\\n    uint32 insertedIndex = _insert(_commitment);\\n    commitments[_commitment] = true;\\n\\n    for (uint256 i = 0; i < _validationModules.length; i++) {\\n      validationModules[_commitment].push(_validationModules[i]);\\n    }\\n\\n    emit NewCode(_commitment, insertedIndex, block.timestamp);\\n  }\\n\\n\\n  /**\\n    @dev Consume a code from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs\\n    `input` array consists of:\\n      - merkle root of all codes in the contract\\n      - hash of unique codes nullifier to prevent double spends\\n      - the recipient of funds\\n      - optional fee that goes to the transaction sender (usually a relay)\\n  */\\n  function consumeCode(\\n    bytes32 _commitment,\\n    bytes memory _proof,\\n    bytes32 _root,\\n    bytes32 _nullifierHash,\\n    address payable _recipient,\\n    bytes[] memory _validationsArgs\\n  ) public virtual payable nonReentrant {\\n    require(!nullifierHashes[_nullifierHash], \\\"The note has been already spent\\\");\\n    require(isKnownRoot(_root), \\\"Cannot find your merkle root\\\"); // Make sure to use a recent one\\n        \\n    require(\\n      verifier.verifyProof(\\n        _proof,\\n        [uint256(_root), uint256(_nullifierHash), uint256(uint160(address(_recipient))),0 ,0, 0]\\n      ),\\n      \\\"Invalid withdraw proof\\\"\\n    );\\n\\n    for (uint256 i = 0; i < validationModules[_commitment].length; i++) {\\n      IValidationModule(validationModules[_commitment][i]).validate(_validationsArgs[i]);\\n    }\\n\\n    nullifierHashes[_nullifierHash] = true;\\n\\n    emit ConsumeCode(_recipient, _nullifierHash, block.timestamp);\\n  }\\n\\n  /** @dev whether a note is already spent */\\n  function isSpent(bytes32 _nullifierHash) public view returns (bool) {\\n    return nullifierHashes[_nullifierHash];\\n  }\\n\\n  /** @dev whether an array of notes is already spent */\\n  function isSpentArray(bytes32[] calldata _nullifierHashes) external view returns (bool[] memory spent) {\\n    spent = new bool[](_nullifierHashes.length);\\n    for (uint256 i = 0; i < _nullifierHashes.length; i++) {\\n      if (isSpent(_nullifierHashes[i])) {\\n        spent[i] = true;\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x0e0e4d6b38cb9a6601fd515ab332752317464a455c1699c2308348ad7f819c5a\",\"license\":\"MIT\"},\"contracts/helpers/MerkleTreeWithHistory.sol\":{\"content\":\"// https://tornado.cash\\n/*\\n * d888888P                                           dP              a88888b.                   dP\\n *    88                                              88             d8'   `88                   88\\n *    88    .d8888b. 88d888b. 88d888b. .d8888b. .d888b88 .d8888b.    88        .d8888b. .d8888b. 88d888b.\\n *    88    88'  `88 88'  `88 88'  `88 88'  `88 88'  `88 88'  `88    88        88'  `88 Y8ooooo. 88'  `88\\n *    88    88.  .88 88       88    88 88.  .88 88.  .88 88.  .88 dP Y8.   .88 88.  .88       88 88    88\\n *    dP    `88888P' dP       dP    dP `88888P8 `88888P8 `88888P' 88  Y88888P' `88888P8 `88888P' dP    dP\\n * ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\\n */\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IHasher {\\n  function MiMCSponge(uint256 in_xL, uint256 in_xR) external pure returns (uint256 xL, uint256 xR);\\n}\\n\\ncontract MerkleTreeWithHistory {\\n  uint256 public constant FIELD_SIZE = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\\n  uint256 public constant ZERO_VALUE = 21663839004416932945382355908790599225266501822907911457504978515578255421292; // = keccak256(\\\"tornado\\\") % FIELD_SIZE\\n  IHasher public immutable hasher;\\n\\n  uint32 public levels;\\n\\n  // the following variables are made public for easier testing and debugging and\\n  // are not supposed to be accessed in regular code\\n\\n  // filledSubtrees and roots could be bytes32[size], but using mappings makes it cheaper because\\n  // it removes index range check on every interaction\\n  mapping(uint256 => bytes32) public filledSubtrees;\\n  mapping(uint256 => bytes32) public roots;\\n  uint32 public constant ROOT_HISTORY_SIZE = 30;\\n  uint32 public currentRootIndex = 0;\\n  uint32 public nextIndex = 0;\\n\\n  constructor(uint32 _levels, IHasher _hasher) {\\n    require(_levels > 0, \\\"_levels should be greater than zero\\\");\\n    require(_levels < 32, \\\"_levels should be less than 32\\\");\\n    levels = _levels;\\n    hasher = _hasher;\\n\\n    for (uint32 i = 0; i < _levels; i++) {\\n      filledSubtrees[i] = zeros(i);\\n    }\\n\\n    roots[0] = zeros(_levels - 1);\\n  }\\n\\n  /**\\n    @dev Hash 2 tree leaves, returns MiMC(_left, _right)\\n  */\\n  function hashLeftRight(\\n    IHasher _hasher,\\n    bytes32 _left,\\n    bytes32 _right\\n  ) public pure returns (bytes32) {\\n    require(uint256(_left) < FIELD_SIZE, \\\"_left should be inside the field\\\");\\n    require(uint256(_right) < FIELD_SIZE, \\\"_right should be inside the field\\\");\\n    uint256 R = uint256(_left);\\n    uint256 C = 0;\\n    (R, C) = _hasher.MiMCSponge(R, C);\\n    R = addmod(R, uint256(_right), FIELD_SIZE);\\n    (R, C) = _hasher.MiMCSponge(R, C);\\n    return bytes32(R);\\n  }\\n\\n  function _insert(bytes32 _leaf) internal returns (uint32 index) {\\n    uint32 _nextIndex = nextIndex;\\n    require(_nextIndex != uint32(2)**levels, \\\"Merkle tree is full. No more leaves can be added\\\");\\n    uint32 currentIndex = _nextIndex;\\n    bytes32 currentLevelHash = _leaf;\\n    bytes32 left;\\n    bytes32 right;\\n\\n    for (uint32 i = 0; i < levels; i++) {\\n      if (currentIndex % 2 == 0) {\\n        left = currentLevelHash;\\n        right = zeros(i);\\n        filledSubtrees[i] = currentLevelHash;\\n      } else {\\n        left = filledSubtrees[i];\\n        right = currentLevelHash;\\n      }\\n      currentLevelHash = hashLeftRight(hasher, left, right);\\n      currentIndex /= 2;\\n    }\\n\\n    uint32 newRootIndex = (currentRootIndex + 1) % ROOT_HISTORY_SIZE;\\n    currentRootIndex = newRootIndex;\\n    roots[newRootIndex] = currentLevelHash;\\n    nextIndex = _nextIndex + 1;\\n    return _nextIndex;\\n  }\\n\\n  /**\\n    @dev Whether the root is present in the root history\\n  */\\n  function isKnownRoot(bytes32 _root) public view returns (bool) {\\n    if (_root == 0) {\\n      return false;\\n    }\\n    uint32 _currentRootIndex = currentRootIndex;\\n    uint32 i = _currentRootIndex;\\n    do {\\n      if (_root == roots[i]) {\\n        return true;\\n      }\\n      if (i == 0) {\\n        i = ROOT_HISTORY_SIZE;\\n      }\\n      i--;\\n    } while (i != _currentRootIndex);\\n    return false;\\n  }\\n\\n  /**\\n    @dev Returns the last root\\n  */\\n  function getLastRoot() public view returns (bytes32) {\\n    return roots[currentRootIndex];\\n  }\\n\\n  /// @dev provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\\n  function zeros(uint256 i) public pure returns (bytes32) {\\n    if (i == 0) return bytes32(0x2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c);\\n    else if (i == 1) return bytes32(0x256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d);\\n    else if (i == 2) return bytes32(0x1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200);\\n    else if (i == 3) return bytes32(0x20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb);\\n    else if (i == 4) return bytes32(0x0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9);\\n    else if (i == 5) return bytes32(0x24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959);\\n    else if (i == 6) return bytes32(0x1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c);\\n    else if (i == 7) return bytes32(0x19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4);\\n    else if (i == 8) return bytes32(0x261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80);\\n    else if (i == 9) return bytes32(0x0058459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007);\\n    else if (i == 10) return bytes32(0x1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30);\\n    else if (i == 11) return bytes32(0x1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5);\\n    else if (i == 12) return bytes32(0x0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f);\\n    else if (i == 13) return bytes32(0x1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd);\\n    else if (i == 14) return bytes32(0x133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108);\\n    else if (i == 15) return bytes32(0x13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6);\\n    else if (i == 16) return bytes32(0x1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854);\\n    else if (i == 17) return bytes32(0x0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea);\\n    else if (i == 18) return bytes32(0x24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d);\\n    else if (i == 19) return bytes32(0x198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05);\\n    else if (i == 20) return bytes32(0x29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4);\\n    else if (i == 21) return bytes32(0x19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967);\\n    else if (i == 22) return bytes32(0x1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453);\\n    else if (i == 23) return bytes32(0x10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48);\\n    else if (i == 24) return bytes32(0x0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1);\\n    else if (i == 25) return bytes32(0x019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c);\\n    else if (i == 26) return bytes32(0x2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99);\\n    else if (i == 27) return bytes32(0x2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354);\\n    else if (i == 28) return bytes32(0x002df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d);\\n    else if (i == 29) return bytes32(0x104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427);\\n    else if (i == 30) return bytes32(0x1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb);\\n    else if (i == 31) return bytes32(0x2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc);\\n    else revert(\\\"Index out of bounds\\\");\\n  }\\n}\\n\",\"keccak256\":\"0x7ca5c42171d3a80191c56b126a47f86093075bece4fa96eace305f8ee3d4f6ae\",\"license\":\"MIT\"},\"contracts/modules/IValidationModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IValidationModule {\\n  function validate(bytes calldata arg) external returns (bool);\\n}\",\"keccak256\":\"0xbce3d3ab208ca1c7fd5e6500f0836c0b99c6dd4b172ebb27bab1a41d2322f94f\",\"license\":\"MIT\"},\"contracts/useCases/TalariaFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n\\nimport {IHasher} from \\\"../helpers/MerkleTreeWithHistory.sol\\\";\\nimport {TalariaProtocol, IVerifier} from \\\"../../contracts/TalariaProtocol.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nabstract contract TalariaFactory is Ownable {\\n    IVerifier defaultVerifier;\\n    IHasher defaultHasher;\\n    uint32 defaultMerkleTreeHeight;\\n    \\n    constructor(\\n        IVerifier _verifier,\\n        IHasher _hasher,\\n        uint32 _merkleTreeHeight\\n    ) Ownable(msg.sender) {\\n        defaultVerifier = _verifier;\\n        defaultHasher = _hasher;\\n        defaultMerkleTreeHeight = _merkleTreeHeight;\\n    }\\n\\n    function changeDefaultVerifier(IVerifier _newVerifier) external onlyOwner {\\n        defaultVerifier = _newVerifier;\\n    }\\n\\n    function changeDefaultHasher(IHasher _newHasher) external onlyOwner {\\n        defaultHasher = _newHasher;\\n    }   \\n\\n    function changeDefaultMerkleTreeHeight(uint32 _newMerkleTreeHeight) external onlyOwner {\\n        defaultMerkleTreeHeight = _newMerkleTreeHeight;\\n    }\\n\\n    function createTalariaInstance() public returns (TalariaProtocol) {\\n        return new TalariaProtocol(defaultVerifier, defaultHasher, defaultMerkleTreeHeight);\\n    }\\n\\n    /*\\n    * @dev Creates a new Talaria instance and returns the address\\n    */\\n    function create() virtual external returns (address);       \\n}\",\"keccak256\":\"0xa37e7a174d7c916e4ae8acfc818b08343aad2cb8984c8b492ac4852cd329db4f\",\"license\":\"MIT\"},\"contracts/useCases/whitelist/Whitelist.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"../../TalariaProtocol.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Whitelist is Ownable, TalariaProtocol{\\n\\n  mapping(address => bool) public usersWhitelisted;\\n\\n  event UserAddedToWhitelist(address indexed user, uint256 timestamp);\\n  event UserRemovedFromWhitelist(address indexed user, uint256 timestamp);\\n\\n  constructor(\\n    IVerifier _verifier,\\n    IHasher _hasher,\\n    uint32 _merkleTreeHeight,\\n    address _owner\\n  ) TalariaProtocol(_verifier, _hasher, _merkleTreeHeight\\n  ) Ownable(_owner) {\\n  }\\n\\n  function createEarlyAccessCode(bytes32 _commitment, address[] calldata _validationModules) public onlyOwner payable {\\n    setCode(_commitment, _validationModules);\\n  }\\n\\n  function consumeEarlyAccessCode(\\n    bytes32 _commitment,\\n    bytes calldata _proof,\\n    bytes32 _root,\\n    bytes32 _nullifierHash,\\n    address payable _to,\\n    bytes[] calldata _validationsArgs,\\n    address userToWhitelist\\n  ) public {\\n    require(!usersWhitelisted[userToWhitelist], \\\"User already whitelisted\\\");\\n\\n    consumeCode(_commitment,_proof, _root, _nullifierHash, _to, _validationsArgs);\\n\\n    usersWhitelisted[userToWhitelist] = true;\\n  }\\n\\n  function bulkCreateEarlyAccessCodes(bytes32[] calldata _commitments, address[][] calldata _validationModules) public payable {\\n    for (uint256 i = 0; i < _commitments.length; i++) {\\n      createEarlyAccessCode(_commitments[i], _validationModules[i]);\\n    }\\n  }\\n\\n  function bulkConsumeEarlyAccessCodes(\\n    bytes32[] calldata _commitments,\\n    bytes[] calldata _proofs,\\n    bytes32[] calldata _roots,\\n    bytes32[] calldata _nullifierHashes,\\n    address payable[] calldata _tos,\\n    bytes[] calldata _validationsArgs,\\n    address[] calldata _usersToWhitelist\\n  ) public {\\n    for (uint256 i = 0; i < _commitments.length; i++) {\\n      consumeEarlyAccessCode(_commitments[i], _proofs[i], _roots[i], _nullifierHashes[i], _tos[i], _validationsArgs, _usersToWhitelist[i]);\\n    }\\n  }\\n\\n  function isWhitelisted(address _user) external view returns (bool) {\\n    return usersWhitelisted[_user];\\n  }\\n\\n  function addUserToWhitelist(address _user) public onlyOwner {\\n    require(!usersWhitelisted[_user], \\\"User already whitelisted\\\");\\n\\n    usersWhitelisted[_user] = true;\\n\\n    emit UserAddedToWhitelist(_user, block.timestamp);\\n  }\\n\\n  function removeUserFromWhitelist(address _user) public onlyOwner {\\n    require(usersWhitelisted[_user], \\\"User not whitelisted\\\");\\n\\n    usersWhitelisted[_user] = false;\\n    \\n    emit UserRemovedFromWhitelist(_user, block.timestamp);\\n  }\\n}\",\"keccak256\":\"0xd09e9dbf6ff6d5fe02316426849b49a66366aea9a55d2b1fc83f38929bb5e134\",\"license\":\"MIT\"},\"contracts/useCases/whitelist/WhitelistFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport {TalariaFactory} from \\\"../TalariaFactory.sol\\\";\\nimport {Whitelist} from \\\"./Whitelist.sol\\\";\\nimport \\\"../../TalariaProtocol.sol\\\";\\n\\ncontract WhitelistFactory is TalariaFactory {\\n\\n    event WhitelistCreated (address indexed whitelist);\\n\\n    constructor (\\n        IVerifier _verifier,\\n        IHasher _hasher,\\n        uint32 _merkleTreeHeight\\n    ) \\n        TalariaFactory(_verifier, _hasher, _merkleTreeHeight)\\n    {}\\n\\n    function create() override external returns (address) {\\n        Whitelist w = new Whitelist(\\n            defaultVerifier,\\n            defaultHasher,\\n            defaultMerkleTreeHeight,\\n            msg.sender\\n        );\\n\\n        emit WhitelistCreated(address(w));\\n\\n        return address(w);\\n    }\\n}\",\"keccak256\":\"0x478ee6a80e7882db7b7c2044a80a11de7f254ca82509090314abcae9e09aec89\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60803461010957601f6152ac38819003918201601f19168301916001600160401b0383118484101761010e578084926060946040528339810103126101095780516001600160a01b0391828216918290036101095760208101519083821680920361010957604001519163ffffffff831683036101095733156100f05760005460018060a01b0319903382821617600055604051953391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360015416176001556002549163ffffffff60a01b9060a01b169160018060c01b031916171760025561518790816101258239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600490813610156200001757600080fd5b600092833560e01c908163228e9855146200036a575080633d1b97441462000316578063715018a614620002b55780638da5cb5b146200028b578063a519cf76146200023d578063e7685ac714620001eb578063efc81a8c146200011b5763f2fde38b146200008557600080fd5b346200011757602036600319011262000117576001600160a01b038235818116939192908490036200011357620000bb620003f7565b8315620000fd57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b509034620001175782600319360112620001175760015460025483516001600160a01b03939092612e3b80850193929186169167ffffffffffffffff851186861017620001d8575084926080949263ffffffff926200231786398352868116602084015260a01c168682015233606082015203019084f08015620001cc57917f3aaa159995532a09d71082a9df6247e5c5846856e24e293fd65e164ed48233f4916020949316918291519380a28152f35b505051903d90823e3d90fd5b634e487b7160e01b895260419052602488fd5b505034620002395760203660031901126200023957356001600160a01b0381169081900362000239576200021e620003f7565b6bffffffffffffffffffffffff60a01b600254161760025580f35b5080fd5b505034620002395760203660031901126200023957356001600160a01b03811690819003620002395762000270620003f7565b6bffffffffffffffffffffffff60a01b600154161760015580f35b8382346200023957816003193601126200023957905490516001600160a01b039091168152602090f35b83346200031357806003193601126200031357620002d2620003f7565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346200023957602036600319011262000239573563ffffffff81168103620002395762000344620003f7565b6002805463ffffffff60a01b191660a09290921b63ffffffff60a01b1691909117905580f35b8493915034620003f35783600319360112620003f3576001546002546001600160a01b0393611ef28481019386169167ffffffffffffffff851186861017620001d8575084926060949263ffffffff926200042586398352868116602084015260a01c168682015203019084f0918215620003ea57602093505191168152f35b513d84823e3d90fd5b8380fd5b6000546001600160a01b031633036200040c57565b60405163118cdaa760e01b8152336004820152602490fdfe60c0346200020657601f62001ef238819003918201601f191683019291906001600160401b038411838510176200020b578160609284926040968752833981010312620002065780516001600160a01b039081811681036200020657602092838101519283168303620002065784015163ffffffff938482168092036200020657600380546001600160401b03191690558115620001b7578082101562000174576000938263ffffffff19865416178555608052835b8581168381101562000100579081620000cf889362000221565b908752600184528887205516858114620000ec57600101620000b5565b634e487b7160e01b85526011600452602485fd5b505092919390600019018181116200016057620001238693926002921662000221565b93828052522055600160045560a052516116d2908162000820823960805181818161017501526102e2015260a0518181816109780152610c1a0152f35b634e487b7160e01b83526011600452602483fd5b60649086519062461bcd60e51b82526004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152fd5b60849086519062461bcd60e51b82526004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b806200024c57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b600181036200027a57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103620002a857507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b60038103620002d657507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200030457507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036200033257507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b600681036200036057507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b600781036200038e57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103620003bc57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103620003e957507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200041757507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036200044557507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c81036200047357507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103620004a157507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103620004cf57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103620004fd57507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b601081036200052b57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036200055957507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b601281036200058757507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103620005b557507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103620005e357507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200061157507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b601681036200063f57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b601781036200066d57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b601881036200069b57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103620006c957507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a8103620006f757507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036200072557507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036200075257507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d81036200078057507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103620007ae57507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03620007da577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826317cc915c14610c49575081632b7ac3f314610c055781633e7fd3b414610830578163414a37ba146107f55781634ecf518b146107d25781636d9833e3146107b2578163838a11fd14610764578163839df945146107375781638ea3099e146106fe57816390eeb02b146106d95781639fa12d0b146105d7578163ba70f757146105a9578163c2b40ae414610581578163cc013d851461025d578163cd87a3b414610241578163e5285dcc14610209578163e8295588146101df578163ec732959146101a4578163ed33639f14610160578163f178e47c14610134575063fc7e9c6f1461010c57600080fd5b346101305781600319360112610130576003549051602091821c63ffffffff168152f35b5080fd5b90503461015c57602036600319011261015c5760209282913581526001845220549051908152f35b8280fd5b505034610130578160031936011261013057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610130578160031936011261013057602090517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b82843461020657602036600319011261020657506101ff602092356110c8565b9051908152f35b80fd5b828434610206576020366003190112610206575061023860209235600052600560205260ff6040600020541690565b90519015158152f35b50503461013057816003193601126101305760209051601e8152f35b828481600319360112610206576024928035843567ffffffffffffffff811161057d5761028d9036908401610d4d565b610298929192610db3565b8185526020906006825260ff87872054166105315763ffffffff96600394888654851c1694896102ca818b5416610ff1565b1686146104d65790919294889495819783988c889a817f00000000000000000000000000000000000000000000000000000000000000009a5b5416918c169182101561039557889796959493928f928f9a908d637fffffff9461034e9360019e8f80881615600014610386578394610341876110c8565b9683525220555b8d610e58565b991c169a168d81146103745760010199959694959394929391929091908d90818e610303565b634e487b7160e01b8d5260118c528e8dfd5b91939092948352522054610348565b9499985050509298999b939a90949750825490601e816103b6818516611017565b160616809163ffffffff19161783558b5260028552868b20556103d885611017565b815467ffffffff00000000191690851b67ffffffff0000000016178155868a5260068452858a20805460ff19166001908117909155988a5b84811061044f5750505050509082917fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e393519182524290820152a25580f35b888c5260078652878c20610464828785610da3565b6001600160a01b0391903582811691908290036104d257805490680100000000000000008210156104bf578e820181556104ba949392916104a491610d1f565b9092835491881b92831b921b1916179055610d7e565b610410565b50634e487b7160e01b8f5260418d52868ffd5b8e80fd5b825162461bcd60e51b81528089018690526030818d01527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b865162461bcd60e51b81528086018390526021818a01527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b8380fd5b90503461015c57602036600319011261015c5760209282913581526002845220549051908152f35b5050346101305781600319360112610130578060209263ffffffff6003541681526002845220549051908152f35b90508234610206576020918260031936011261013057803567ffffffffffffffff811161015c5784929161060d91369101610d4d565b919061061883610d07565b9061062585519283610c73565b83825261063184610d07565b8287019490601f1901368637835b8181106106865750505083519485948186019282875251809352850193925b82811061066d57505050500390f35b835115158552869550938101939281019260010161065e565b806106b361069e6106bc9385879c99989a9b9c610da3565b35600052600560205260ff6040600020541690565b6106c757610d7e565b96959492939661063f565b60016106d38289610e2e565b52610d7e565b50503461013057816003193601126101305760209063ffffffff600354169051908152f35b90503461015c57606036600319011261015c5735916001600160a01b038316830361020657506101ff6020926044359060243590610e58565b90503461015c57602036600319011261015c578160209360ff923581526006855220541690519015158152f35b828434610206578160031936011261020657602435923581526007602052818120908154841015610206575060209261079c91610d1f565b905491519160018060a01b039160031b1c168152f35b82843461020657602036600319011261020657506102386020923561102c565b50503461013057816003193601126101305763ffffffff60209254169051908152f35b505034610130578160031936011261013057602090517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b905060c036600319011261015c5760249081359267ffffffffffffffff93848111610c01576108629036908401610cab565b6001600160a01b0360843581811696604435969390916064359190899003610bfd5760a43592808411610bf95736602385011215610bf95783880135986108a88a610d07565b946108b589519687610c73565b8a865260209a888c88019160051b830101913683116104d257898101915b838310610bce57505050506108e6610db3565b838c5260058a5260ff888d205416610b8c576109018161102c565b15610b4a5787519160c0830190811183821017610b3857928a9161095e948a52835284828401528b898401528c60608401528c60808401528c60a0840152885193849163695ef6f960e01b835260e08c84015260e4830190610dee565b818901938e5b60068110610b1f5750508192935003818d887f0000000000000000000000000000000000000000000000000000000000000000165af1908115610b15578a91610af8575b5015610abd579088929183988735995b8a865260078a528786208054821015610a6b578a8883828a8a8f8f9790610a0f6109f06109e78f948990610d1f565b98905494610e2e565b519951998a988997889463c16e50ef60e01b8652850152830190610dee565b039460031b1c165af18015610a615790610a2f9291610a34575b50610d7e565b6109b8565b610a53908c8d3d10610a5a575b610a4b8183610c73565b810190610dd6565b5038610a29565b503d610a41565b89513d89823e3d90fd5b8660018b7fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f60608f8e8a8a92818952600581528289208860ff1982541617905582519384528301524290820152a15580f35b505050606493601692519362461bcd60e51b85528401528201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152fd5b610b0f9150883d8a11610a5a57610a4b8183610c73565b386109a8565b86513d8c823e3d90fd5b81518652948401948d9487945090910190600101610964565b634e487b7160e01b8d5260418a52878dfd5b875162461bcd60e51b8152808a018b9052601c818901527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b875162461bcd60e51b8152808a018b9052601f818901527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b8235868111610bf4578e91610be983928e3691870101610cab565b8152019201916108d3565b508f80fd5b8a80fd5b8980fd5b8580fd5b505034610130578160031936011261013057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9291503461057d57602036600319011261057d573583526005602090815292205460ff1615158152f35b90601f8019910116810190811067ffffffffffffffff821117610c9557604052565b634e487b7160e01b600052604160045260246000fd5b81601f82011215610d025780359067ffffffffffffffff8211610c955760405192610ce0601f8401601f191660200185610c73565b82845260208383010111610d0257816000926020809301838601378301015290565b600080fd5b67ffffffffffffffff8111610c955760051b60200190565b8054821015610d375760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9181601f84011215610d025782359167ffffffffffffffff8311610d02576020808501948460051b010111610d0257565b6000198114610d8d5760010190565b634e487b7160e01b600052601160045260246000fd5b9190811015610d375760051b0190565b600260045414610dc4576002600455565b604051633ee5aeb560e01b8152600490fd5b90816020910312610d0257518015158103610d025790565b919082519283825260005b848110610e1a575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610df9565b8051821015610d375760209160051b010190565b9190826040910312610d02576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019384831015610fad5784821015610f5e5760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa978815610f5457869798859697938991610f32575b506044939486519889968795865208600484015260248301525afa928315610f275792610efd57505090565b610f1c9250803d10610f20575b610f148183610c73565b810190610e42565b5090565b503d610f0a565b9051903d90823e3d90fd5b60449450610f4d9150863d8811610f2057610f148183610c73565b9093610ed1565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b80156110115760ff8111610d8d576001901b9063ffffffff8211610d8d57565b50600190565b90600163ffffffff80931601918211610d8d57565b80156110c25763ffffffff8060035416918260019384805b611054575b505050505050600090565b156110b3575b600090848116908183526002602052604083205485146110aa578591156110a2575b16801561108e57600019019085611044565b634e487b7160e01b82526011600452602482fd5b50601e61107c565b50505050505090565b818482160361105a5780611049565b50600090565b806110f257507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b6001810361111f57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b6002810361114c57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b6003810361117957507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036111a657507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036111d357507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b6006810361120057507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b6007810361122d57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b6008810361125a57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b6009810361128657507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036112b357507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036112e057507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c810361130d57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d810361133a57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e810361136757507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f810361139457507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b601081036113c157507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036113ee57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b6012810361141b57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b6013810361144857507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b6014810361147557507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036114a257507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b601681036114cf57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b601781036114fc57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b6018810361152957507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b6019810361155657507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a810361158357507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036115b057507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036115dc57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d810361160957507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e810361163657507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03611661577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fdfea26469706673582212203d02602ff0ce574195e50b20248860878cbc908e2030ebb7a77ae77004af611064736f6c6343000814003360c0346200028e57601f62002e3b38819003918201601f191683019291906001600160401b03841183851017620002935781608092849260409687528339810103126200028e5780516001600160a01b03919082811681036200028e57602091828101519284841684036200028e57858201519363ffffffff95868616938487036200028e57606001518181168091036200028e5780156200027657600096875492828b519185167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08b80a3600380546001600160401b0319169055861562000228575084861015620001e4576001600160c01b03199092161760a09190911b63ffffffff60a01b16178555608052835b858116838110156200015b5790816200012a8893620002a9565b908752600184528887205516858114620001475760010162000110565b634e487b7160e01b85526011600452602485fd5b50509291939060001901818111620001d0576200017e86939260029216620002a9565b93828052522055600160045560a052516125939081620008a882396080518181816103bd0152818161091001528181610a4b0152611139015260a0518181816114170152818161166e015261230f0152f35b634e487b7160e01b83526011600452602483fd5b895162461bcd60e51b815260048101869052601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606490fd5b62461bcd60e51b815260048101869052602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152608490fd5b8851631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b80620002d457507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b600181036200030257507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b600281036200033057507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b600381036200035e57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200038c57507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103620003ba57507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103620003e857507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b600781036200041657507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b600881036200044457507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b600981036200047157507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200049f57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b8103620004cd57507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103620004fb57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d81036200052957507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e81036200055757507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f81036200058557507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103620005b357507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103620005e157507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b601281036200060f57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b601381036200063d57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b601481036200066b57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200069957507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b60168103620006c757507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103620006f557507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b601881036200072357507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b601981036200075157507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a81036200077f57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b8103620007ad57507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c8103620007da57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d81036200080857507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e81036200083657507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f0362000862577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe6101e080604052600436101561001457600080fd5b60003560e01c90816317cc915c1461169d575080632b7ac3f3146116585780633af32abf14610ca55780633e7fd3b414611302578063414a37ba146112c75780634ecf518b146112a05780636c31a67d146110d95780636d9833e3146110bb578063715018a614611062578063747b805014610fd7578063838a11fd14610f85578063839df94514610f545780638da5cb5b14610f2b5780638ea3099e14610ef457806390eeb02b14610ed05780639fa12d0b14610dd85780639fdc864214610d42578063ba70f75714610d10578063c2b40ae414610ce4578063c78aa3ed14610ca5578063cc013d85146109f3578063cd87a3b4146109d7578063e5285dcc146109a0578063e82955881461097a578063ec7329591461093f578063ed33639f146108fa578063efb68ee91461070c578063f178e47c146106e0578063f2fde38b14610652578063f8f534241461026a578063f9902bb1146101ab5763fc7e9c6f1461018057600080fd5b346101a65760003660031901126101a657602060035463ffffffff60405191831c168152f35b600080fd5b346101a65760203660031901126101a6576101c46116ca565b6101cc611897565b6001600160a01b031660008181526008602052604090205460ff161561022e57806000526008602052604060002060ff1981541690557f945abea5c46c52351c0135978bf987fe1fb685d09bdf509f3a325ae79747ce676020604051428152a2005b60405162461bcd60e51b8152602060048201526014602482015273155cd95c881b9bdd081dda1a5d195b1a5cdd195960621b6044820152606490fd5b60403660031901126101a6576004356001600160401b0381116101a65761029590369060040161181c565b906024356001600160401b0381116101a6576102b68391369060040161181c565b929060005b8381106102c457005b6102cf8185856118d2565b358582101561063c5760059582871b840135601e19853603018112156101a6578401966001600160401b038835116101a6578735901b360360208801136101a657610318611897565b6103206118f6565b81600052600660205260ff604060002054166105ed5763ffffffff60035460201c169363ffffffff6103588160005460a01c16611b34565b16851461058f576000958592845b63ffffffff60005460a01c1663ffffffff8a161015610434576103e1637fffffff91600187161560001461041a57806103a463ffffffff8d16611c0b565b9163ffffffff8d1660005260016020526040600020555b7f000000000000000000000000000000000000000000000000000000000000000061199b565b9460011c169763ffffffff808216146104045763ffffffff166001019793610366565b634e487b7160e01b600052601160045260246000fd5b63ffffffff8b1660005260016020526040600020546103bb565b9198969350965097909760035463ffffffff601e81610454818516611b5a565b160616809163ffffffff191617600355600052600260205260406000205561047b82611b5a565b67ffffffff000000006003549160201b169067ffffffff000000001916176003558260005260066020526040600020600160ff1982541617905560005b8135811061050b575050907fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e3604061050194938151908152426020820152a260016004556118c3565b93909291936102bb565b83600052600760205260406000209061053161052c828535602087016118d2565b6118e2565b825492600160401b84101561057957836105539160016105749601815561187f565b819291549060031b9160018060a01b03809116831b921b19161790556118c3565b6104b8565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b634e487b7160e01b600052603260045260246000fd5b346101a65760203660031901126101a65761066b6116ca565b610673611897565b6001600160a01b039081169081156106c757600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b346101a65760203660031901126101a65760043560005260016020526020604060002054604051908152f35b346101a65760e03660031901126101a6576004356001600160401b0381116101a65761073c90369060040161181c565b6101c0526024356001600160401b0381116101a65761075f90369060040161181c565b91906044356001600160401b0381116101a65761078090369060040161181c565b6101a052610120526064356001600160401b0381116101a6576107a790369060040161181c565b61018052610140526084356001600160401b0381116101a6576107ce90369060040161181c565b60c0526080526001600160401b0360a435116101a6576107f33660a43560040161181c565b60e0526101005260c4356001600160401b0381116101a65761081990369060040161181c565b60a0526101605260005b6101c051808210156108f8578161083a91856118d2565b35908481101561063c578060051b830135601e19843603018112156101a65783016001600160401b038135116101a6578035360360208201136101a657610888826101a051610120516118d2565b3561089a8361018051610140516118d2565b35916108ab8460c0516080516118d2565b35946001600160a01b03861686036101a6576108f3956108ee946108d861052c8860a051610160516118d2565b9460e0519461010051946020823592019061222b565b6118c3565b610823565b005b346101a65760003660031901126101a6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101a65760003660031901126101a65760206040517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b346101a65760203660031901126101a6576020610998600435611c0b565b604051908152f35b346101a65760203660031901126101a65760206109cd600435600052600560205260ff6040600020541690565b6040519015158152f35b346101a65760003660031901126101a6576020604051601e8152f35b6109fc3661184c565b91610a056118f6565b806000526020906006825260ff60406000205416610c565763ffffffff93600392858454821c169486610a3e8160005460a01c16611b34565b168614610bf857946000947f0000000000000000000000000000000000000000000000000000000000000000918590805b8a60005460a01c168b8a1690811015610ae0578b91610ab9637fffffff9260019b8c841615600014610ace5780610aa583611c0b565b926000528d8c526040600020555b8961199b565b991c1698168a81146104045760010197610a6f565b906000528b8a52604060002054610ab3565b5050848987898d875490601e81610af8818516611b5a565b160616809163ffffffff191617885560005260028452604060002055610b1d84611b5a565b865467ffffffff00000000191690841b67ffffffff000000001617865560008581526006845260408120805460ff1916600190811790915596905b828110610b965787877fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e36040898982519182524290820152a2600455005b8660005260078552604060002090610bb261052c8286886118d2565b825492600160401b8410156105795783610bd3918c610bf39601815561187f565b8192915490861b9160018060a01b03809116831b921b19161790556118c3565b610b58565b60405162461bcd60e51b815260048101839052603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b815260048101839052602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b346101a65760203660031901126101a6576001600160a01b03610cc66116ca565b166000526008602052602060ff604060002054166040519015158152f35b346101a65760203660031901126101a65760043560005260026020526020604060002054604051908152f35b346101a65760003660031901126101a65763ffffffff6003541660005260026020526020604060002054604051908152f35b346101a65760e03660031901126101a6576024356001600160401b038082116101a657366023830112156101a6578160040135908082116101a65736602483850101116101a657610d91611780565b9060a4359081116101a657610daa90369060040161181c565b60c435939092906001600160a01b03851685036101a6576108f895606435916024604435920160043561222b565b346101a6576020806003193601126101a6576004356001600160401b0381116101a657610e0990369060040161181c565b90610e1382611796565b90610e2160405192836116fb565b828252610e2d83611796565b8285019390601f190136853760005b818110610e895750505090604051928392818401908285525180915260408401929160005b828110610e7057505050500390f35b8351151585528695509381019392810192600101610e61565b80610eb0610e9b610eb99385876118d2565b35600052600560205260ff6040600020541690565b610ebe576118c3565b610e3c565b6001610eca8287611971565b526118c3565b346101a65760003660031901126101a657602063ffffffff60035416604051908152f35b346101a65760603660031901126101a6576004356001600160a01b03811681036101a657610998602091604435906024359061199b565b346101a65760003660031901126101a6576000546040516001600160a01b039091168152602090f35b346101a65760203660031901126101a6576004356000526006602052602060ff604060002054166040519015158152f35b346101a65760403660031901126101a6576024356004356000526007602052604060002080548210156101a657602091610fbe9161187f565b905460405160039290921b1c6001600160a01b03168152f35b346101a65760203660031901126101a657610ff06116ca565b610ff8611897565b6001600160a01b031660008181526008602052604090205461101d9060ff16156121df565b8060005260086020526040600020600160ff198254161790557f3e2d12b27238f71a0aa434851aa5f1ac898b05c1694b24c6ea339b76927ea4f76020604051428152a2005b346101a65760003660031901126101a65761107b611897565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101a65760203660031901126101a65760206109cd600435611b6f565b6110e23661184c565b916110eb611897565b6110f36118f6565b806000526020906006825260ff60406000205416610c565763ffffffff93600392858454821c16948661112c8160005460a01c16611b34565b168614610bf857946000947f0000000000000000000000000000000000000000000000000000000000000000918590805b8a60005460a01c168b8a16908110156111a8578b91611193637fffffff9260019b8c841615600014610ace5780610aa583611c0b565b991c1698168a8114610404576001019761115d565b5050848987898d875490601e816111c0818516611b5a565b160616809163ffffffff1916178855600052600284526040600020556111e584611b5a565b865467ffffffff00000000191690841b67ffffffff000000001617865560008581526006845260408120805460ff1916600190811790915596905b82811061125e5787877fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e36040898982519182524290820152a2600455005b866000526007855260406000209061127a61052c8286886118d2565b825492600160401b8410156105795783610bd3918c61129b9601815561187f565b611220565b346101a65760003660031901126101a657602063ffffffff60005460a01c16604051908152f35b346101a65760003660031901126101a65760206040517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b60c03660031901126101a6576001600160401b03600435602480358381116101a657611332903690600401611762565b9060443593606435611342611780565b9160a4359081116101a657366023820112156101a65761136b90369085816004013591016117ad565b956113746118f6565b816000526020946005865260ff604060002054166116145761139582611b6f565b156115d057906113fb90604051906113ac826116e0565b815283878201528660018060a01b03809616938460408401526000606084015260006080840152600060a084015260405193849163695ef6f960e01b835260e0600484015260e4830190611931565b8882019360005b600681106115b75750508192935003816000887f0000000000000000000000000000000000000000000000000000000000000000165af19081156114fc5760009161159a575b501561155d5760005b86600052600786526040600020805482101561150857908689828860008961148861147f856114ab9a61187f565b95905496611971565b519460405180998197829663c16e50ef60e01b84528a6004850152830190611931565b039460031b1c165af19182156114fc576114ca926114cf575b506118c3565b611451565b6114ee90883d8a116114f5575b6114e681836116fb565b810190611919565b50896114c4565b503d6114dc565b6040513d6000823e3d90fd5b7fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f606084868a81600052600581526040600020600160ff19825416179055604051928352820152426040820152a16001600455005b60405162461bcd60e51b8152600481018690526016818601527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b6115b19150863d88116114f5576114e681836116fb565b88611448565b81518652948401948b9487945090910190600101611402565b60405162461bcd60e51b815260048101879052601c818701527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b60405162461bcd60e51b815260048101879052601f818701527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b346101a65760003660031901126101a6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101a65760203660031901126101a6576020906004356000526005825260ff6040600020541615158152f35b600435906001600160a01b03821682036101a657565b60c081019081106001600160401b0382111761057957604052565b90601f801991011681019081106001600160401b0382111761057957604052565b9291926001600160401b0382116105795760405191611745601f8201601f1916602001846116fb565b8294818452818301116101a6578281602093846000960137010152565b9080601f830112156101a65781602061177d9335910161171c565b90565b608435906001600160a01b03821682036101a657565b6001600160401b0381116105795760051b60200190565b929190926117ba84611796565b916117c860405193846116fb565b829480845260208094019060051b8301928284116101a65780915b8483106117f257505050505050565b82356001600160401b0381116101a65786916118118684938601611762565b8152019201916117e3565b9181601f840112156101a6578235916001600160401b0383116101a6576020808501948460051b0101116101a657565b9060406003198301126101a65760043591602435906001600160401b0382116101a65761187b9160040161181c565b9091565b805482101561063c5760005260206000200190600090565b6000546001600160a01b031633036118ab57565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146104045760010190565b919081101561063c5760051b0190565b356001600160a01b03811681036101a65790565b600260045414611907576002600455565b604051633ee5aeb560e01b8152600490fd5b908160209103126101a6575180151581036101a65790565b919082519283825260005b84811061195d575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161193c565b805182101561063c5760209160051b010190565b91908260409103126101a6576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019384831015611af05784821015611aa15760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa978815611a9757869798859697938991611a75575b506044939486519889968795865208600484015260248301525afa928315611a6a5792611a4057505090565b611a5f9250803d10611a63575b611a5781836116fb565b810190611985565b5090565b503d611a4d565b9051903d90823e3d90fd5b60449450611a909150863d8811611a6357611a5781836116fb565b9093611a14565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b8015611b545760ff8111610404576001901b9063ffffffff821161040457565b50600190565b90600163ffffffff8093160191821161040457565b8015611c055763ffffffff8060035416918260019384805b611b97575b505050505050600090565b15611bf6575b60009084811690818352600260205260408320548514611bed57859115611be5575b168015611bd157600019019085611b87565b634e487b7160e01b82526011600452602482fd5b50601e611bbf565b50505050505090565b8184821603611b9d5780611b8c565b50600090565b80611c3557507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b60018103611c6257507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103611c8f57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b60038103611cbc57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b60048103611ce957507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103611d1657507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103611d4357507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103611d7057507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103611d9d57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103611dc957507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a8103611df657507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b8103611e2357507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103611e5057507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103611e7d57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103611eaa57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103611ed757507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103611f0457507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103611f3157507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103611f5e57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103611f8b57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103611fb857507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b60158103611fe557507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b6016810361201257507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b6017810361203f57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b6018810361206c57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b6019810361209957507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a81036120c657507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036120f357507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c810361211f57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d810361214c57507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e810361217957507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f036121a4577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fd5b156121e657565b60405162461bcd60e51b815260206004820152601860248201527f5573657220616c72656164792077686974656c697374656400000000000000006044820152606490fd5b97939195600897959399919961227760018060a01b038097169261226f60009d8e9b868d5260209d8e5261226860ff60409e8f90205416156121df565b369161171c565b9836916117ad565b946122806118f6565b848c5260058a5260ff898d2054166125195761229b82611b6f565b156124d5578960e0988d896122f5948d51966122b6886116e0565b875289858801521694858d8201528160608201528160808201528160a08201528c5194859363695ef6f98e1b855260049d8e86015260e4850190611931565b9082602485015b600682106124b55750505082809103918b7f0000000000000000000000000000000000000000000000000000000000000000165af19081156124ab578c9161248e575b5015612452578a5b8a8c5260078a52888c2080548210156123e8578a8a838f83908c8c8f61237c6123738761239d9b61187f565b97905493611971565b5196519889978896879363c16e50ef60e01b85528401526024830190611931565b039460031b1c165af180156123de57906123bc92916123c157506118c3565b612347565b6123d7908c8d3d106114f5576114e681836116fb565b50386114c4565b8a513d8f823e3d90fd5b505060019950600895508998945060607fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f918a949c989395808a52600588528a8a2060ff199d8e8254161790558a5191825287820152428a820152a1558352522091825416179055565b875162461bcd60e51b81528088018a9052601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b6124a591508a3d8c116114f5576114e681836116fb565b3861233f565b89513d8e823e3d90fd5b8287939650600194979295505181520193019101928f918e9486946122fc565b885162461bcd60e51b8152600481018b9052601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b885162461bcd60e51b8152600481018b9052601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fdfea2646970667358221220d8340bf95e46911375957685f646c2e3f17644ced0ce7fa2ca27d31f7f949fb064736f6c63430008140033a2646970667358221220d92e92b4f72cfdbeba6bc5de122d23a5b390844d6fe586250cc23c8d5deb299764736f6c63430008140033",
  "deployedBytecode": "0x60806040818152600490813610156200001757600080fd5b600092833560e01c908163228e9855146200036a575080633d1b97441462000316578063715018a614620002b55780638da5cb5b146200028b578063a519cf76146200023d578063e7685ac714620001eb578063efc81a8c146200011b5763f2fde38b146200008557600080fd5b346200011757602036600319011262000117576001600160a01b038235818116939192908490036200011357620000bb620003f7565b8315620000fd57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b509034620001175782600319360112620001175760015460025483516001600160a01b03939092612e3b80850193929186169167ffffffffffffffff851186861017620001d8575084926080949263ffffffff926200231786398352868116602084015260a01c168682015233606082015203019084f08015620001cc57917f3aaa159995532a09d71082a9df6247e5c5846856e24e293fd65e164ed48233f4916020949316918291519380a28152f35b505051903d90823e3d90fd5b634e487b7160e01b895260419052602488fd5b505034620002395760203660031901126200023957356001600160a01b0381169081900362000239576200021e620003f7565b6bffffffffffffffffffffffff60a01b600254161760025580f35b5080fd5b505034620002395760203660031901126200023957356001600160a01b03811690819003620002395762000270620003f7565b6bffffffffffffffffffffffff60a01b600154161760015580f35b8382346200023957816003193601126200023957905490516001600160a01b039091168152602090f35b83346200031357806003193601126200031357620002d2620003f7565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346200023957602036600319011262000239573563ffffffff81168103620002395762000344620003f7565b6002805463ffffffff60a01b191660a09290921b63ffffffff60a01b1691909117905580f35b8493915034620003f35783600319360112620003f3576001546002546001600160a01b0393611ef28481019386169167ffffffffffffffff851186861017620001d8575084926060949263ffffffff926200042586398352868116602084015260a01c168682015203019084f0918215620003ea57602093505191168152f35b513d84823e3d90fd5b8380fd5b6000546001600160a01b031633036200040c57565b60405163118cdaa760e01b8152336004820152602490fdfe60c0346200020657601f62001ef238819003918201601f191683019291906001600160401b038411838510176200020b578160609284926040968752833981010312620002065780516001600160a01b039081811681036200020657602092838101519283168303620002065784015163ffffffff938482168092036200020657600380546001600160401b03191690558115620001b7578082101562000174576000938263ffffffff19865416178555608052835b8581168381101562000100579081620000cf889362000221565b908752600184528887205516858114620000ec57600101620000b5565b634e487b7160e01b85526011600452602485fd5b505092919390600019018181116200016057620001238693926002921662000221565b93828052522055600160045560a052516116d2908162000820823960805181818161017501526102e2015260a0518181816109780152610c1a0152f35b634e487b7160e01b83526011600452602483fd5b60649086519062461bcd60e51b82526004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152fd5b60849086519062461bcd60e51b82526004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b806200024c57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b600181036200027a57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103620002a857507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b60038103620002d657507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200030457507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036200033257507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b600681036200036057507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b600781036200038e57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103620003bc57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103620003e957507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200041757507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036200044557507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c81036200047357507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103620004a157507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103620004cf57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103620004fd57507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b601081036200052b57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036200055957507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b601281036200058757507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103620005b557507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103620005e357507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200061157507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b601681036200063f57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b601781036200066d57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b601881036200069b57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103620006c957507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a8103620006f757507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036200072557507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036200075257507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d81036200078057507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103620007ae57507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03620007da577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826317cc915c14610c49575081632b7ac3f314610c055781633e7fd3b414610830578163414a37ba146107f55781634ecf518b146107d25781636d9833e3146107b2578163838a11fd14610764578163839df945146107375781638ea3099e146106fe57816390eeb02b146106d95781639fa12d0b146105d7578163ba70f757146105a9578163c2b40ae414610581578163cc013d851461025d578163cd87a3b414610241578163e5285dcc14610209578163e8295588146101df578163ec732959146101a4578163ed33639f14610160578163f178e47c14610134575063fc7e9c6f1461010c57600080fd5b346101305781600319360112610130576003549051602091821c63ffffffff168152f35b5080fd5b90503461015c57602036600319011261015c5760209282913581526001845220549051908152f35b8280fd5b505034610130578160031936011261013057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610130578160031936011261013057602090517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b82843461020657602036600319011261020657506101ff602092356110c8565b9051908152f35b80fd5b828434610206576020366003190112610206575061023860209235600052600560205260ff6040600020541690565b90519015158152f35b50503461013057816003193601126101305760209051601e8152f35b828481600319360112610206576024928035843567ffffffffffffffff811161057d5761028d9036908401610d4d565b610298929192610db3565b8185526020906006825260ff87872054166105315763ffffffff96600394888654851c1694896102ca818b5416610ff1565b1686146104d65790919294889495819783988c889a817f00000000000000000000000000000000000000000000000000000000000000009a5b5416918c169182101561039557889796959493928f928f9a908d637fffffff9461034e9360019e8f80881615600014610386578394610341876110c8565b9683525220555b8d610e58565b991c169a168d81146103745760010199959694959394929391929091908d90818e610303565b634e487b7160e01b8d5260118c528e8dfd5b91939092948352522054610348565b9499985050509298999b939a90949750825490601e816103b6818516611017565b160616809163ffffffff19161783558b5260028552868b20556103d885611017565b815467ffffffff00000000191690851b67ffffffff0000000016178155868a5260068452858a20805460ff19166001908117909155988a5b84811061044f5750505050509082917fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e393519182524290820152a25580f35b888c5260078652878c20610464828785610da3565b6001600160a01b0391903582811691908290036104d257805490680100000000000000008210156104bf578e820181556104ba949392916104a491610d1f565b9092835491881b92831b921b1916179055610d7e565b610410565b50634e487b7160e01b8f5260418d52868ffd5b8e80fd5b825162461bcd60e51b81528089018690526030818d01527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b865162461bcd60e51b81528086018390526021818a01527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b8380fd5b90503461015c57602036600319011261015c5760209282913581526002845220549051908152f35b5050346101305781600319360112610130578060209263ffffffff6003541681526002845220549051908152f35b90508234610206576020918260031936011261013057803567ffffffffffffffff811161015c5784929161060d91369101610d4d565b919061061883610d07565b9061062585519283610c73565b83825261063184610d07565b8287019490601f1901368637835b8181106106865750505083519485948186019282875251809352850193925b82811061066d57505050500390f35b835115158552869550938101939281019260010161065e565b806106b361069e6106bc9385879c99989a9b9c610da3565b35600052600560205260ff6040600020541690565b6106c757610d7e565b96959492939661063f565b60016106d38289610e2e565b52610d7e565b50503461013057816003193601126101305760209063ffffffff600354169051908152f35b90503461015c57606036600319011261015c5735916001600160a01b038316830361020657506101ff6020926044359060243590610e58565b90503461015c57602036600319011261015c578160209360ff923581526006855220541690519015158152f35b828434610206578160031936011261020657602435923581526007602052818120908154841015610206575060209261079c91610d1f565b905491519160018060a01b039160031b1c168152f35b82843461020657602036600319011261020657506102386020923561102c565b50503461013057816003193601126101305763ffffffff60209254169051908152f35b505034610130578160031936011261013057602090517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b905060c036600319011261015c5760249081359267ffffffffffffffff93848111610c01576108629036908401610cab565b6001600160a01b0360843581811696604435969390916064359190899003610bfd5760a43592808411610bf95736602385011215610bf95783880135986108a88a610d07565b946108b589519687610c73565b8a865260209a888c88019160051b830101913683116104d257898101915b838310610bce57505050506108e6610db3565b838c5260058a5260ff888d205416610b8c576109018161102c565b15610b4a5787519160c0830190811183821017610b3857928a9161095e948a52835284828401528b898401528c60608401528c60808401528c60a0840152885193849163695ef6f960e01b835260e08c84015260e4830190610dee565b818901938e5b60068110610b1f5750508192935003818d887f0000000000000000000000000000000000000000000000000000000000000000165af1908115610b15578a91610af8575b5015610abd579088929183988735995b8a865260078a528786208054821015610a6b578a8883828a8a8f8f9790610a0f6109f06109e78f948990610d1f565b98905494610e2e565b519951998a988997889463c16e50ef60e01b8652850152830190610dee565b039460031b1c165af18015610a615790610a2f9291610a34575b50610d7e565b6109b8565b610a53908c8d3d10610a5a575b610a4b8183610c73565b810190610dd6565b5038610a29565b503d610a41565b89513d89823e3d90fd5b8660018b7fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f60608f8e8a8a92818952600581528289208860ff1982541617905582519384528301524290820152a15580f35b505050606493601692519362461bcd60e51b85528401528201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152fd5b610b0f9150883d8a11610a5a57610a4b8183610c73565b386109a8565b86513d8c823e3d90fd5b81518652948401948d9487945090910190600101610964565b634e487b7160e01b8d5260418a52878dfd5b875162461bcd60e51b8152808a018b9052601c818901527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b875162461bcd60e51b8152808a018b9052601f818901527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b8235868111610bf4578e91610be983928e3691870101610cab565b8152019201916108d3565b508f80fd5b8a80fd5b8980fd5b8580fd5b505034610130578160031936011261013057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9291503461057d57602036600319011261057d573583526005602090815292205460ff1615158152f35b90601f8019910116810190811067ffffffffffffffff821117610c9557604052565b634e487b7160e01b600052604160045260246000fd5b81601f82011215610d025780359067ffffffffffffffff8211610c955760405192610ce0601f8401601f191660200185610c73565b82845260208383010111610d0257816000926020809301838601378301015290565b600080fd5b67ffffffffffffffff8111610c955760051b60200190565b8054821015610d375760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9181601f84011215610d025782359167ffffffffffffffff8311610d02576020808501948460051b010111610d0257565b6000198114610d8d5760010190565b634e487b7160e01b600052601160045260246000fd5b9190811015610d375760051b0190565b600260045414610dc4576002600455565b604051633ee5aeb560e01b8152600490fd5b90816020910312610d0257518015158103610d025790565b919082519283825260005b848110610e1a575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610df9565b8051821015610d375760209160051b010190565b9190826040910312610d02576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019384831015610fad5784821015610f5e5760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa978815610f5457869798859697938991610f32575b506044939486519889968795865208600484015260248301525afa928315610f275792610efd57505090565b610f1c9250803d10610f20575b610f148183610c73565b810190610e42565b5090565b503d610f0a565b9051903d90823e3d90fd5b60449450610f4d9150863d8811610f2057610f148183610c73565b9093610ed1565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b80156110115760ff8111610d8d576001901b9063ffffffff8211610d8d57565b50600190565b90600163ffffffff80931601918211610d8d57565b80156110c25763ffffffff8060035416918260019384805b611054575b505050505050600090565b156110b3575b600090848116908183526002602052604083205485146110aa578591156110a2575b16801561108e57600019019085611044565b634e487b7160e01b82526011600452602482fd5b50601e61107c565b50505050505090565b818482160361105a5780611049565b50600090565b806110f257507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b6001810361111f57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b6002810361114c57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b6003810361117957507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036111a657507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036111d357507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b6006810361120057507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b6007810361122d57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b6008810361125a57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b6009810361128657507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036112b357507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036112e057507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c810361130d57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d810361133a57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e810361136757507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f810361139457507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b601081036113c157507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036113ee57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b6012810361141b57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b6013810361144857507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b6014810361147557507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036114a257507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b601681036114cf57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b601781036114fc57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b6018810361152957507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b6019810361155657507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a810361158357507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036115b057507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036115dc57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d810361160957507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e810361163657507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03611661577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fdfea26469706673582212203d02602ff0ce574195e50b20248860878cbc908e2030ebb7a77ae77004af611064736f6c6343000814003360c0346200028e57601f62002e3b38819003918201601f191683019291906001600160401b03841183851017620002935781608092849260409687528339810103126200028e5780516001600160a01b03919082811681036200028e57602091828101519284841684036200028e57858201519363ffffffff95868616938487036200028e57606001518181168091036200028e5780156200027657600096875492828b519185167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08b80a3600380546001600160401b0319169055861562000228575084861015620001e4576001600160c01b03199092161760a09190911b63ffffffff60a01b16178555608052835b858116838110156200015b5790816200012a8893620002a9565b908752600184528887205516858114620001475760010162000110565b634e487b7160e01b85526011600452602485fd5b50509291939060001901818111620001d0576200017e86939260029216620002a9565b93828052522055600160045560a052516125939081620008a882396080518181816103bd0152818161091001528181610a4b0152611139015260a0518181816114170152818161166e015261230f0152f35b634e487b7160e01b83526011600452602483fd5b895162461bcd60e51b815260048101869052601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606490fd5b62461bcd60e51b815260048101869052602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152608490fd5b8851631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b80620002d457507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b600181036200030257507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b600281036200033057507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b600381036200035e57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200038c57507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103620003ba57507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103620003e857507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b600781036200041657507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b600881036200044457507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b600981036200047157507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200049f57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b8103620004cd57507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103620004fb57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d81036200052957507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e81036200055757507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f81036200058557507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103620005b357507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103620005e157507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b601281036200060f57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b601381036200063d57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b601481036200066b57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200069957507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b60168103620006c757507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103620006f557507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b601881036200072357507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b601981036200075157507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a81036200077f57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b8103620007ad57507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c8103620007da57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d81036200080857507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e81036200083657507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f0362000862577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe6101e080604052600436101561001457600080fd5b60003560e01c90816317cc915c1461169d575080632b7ac3f3146116585780633af32abf14610ca55780633e7fd3b414611302578063414a37ba146112c75780634ecf518b146112a05780636c31a67d146110d95780636d9833e3146110bb578063715018a614611062578063747b805014610fd7578063838a11fd14610f85578063839df94514610f545780638da5cb5b14610f2b5780638ea3099e14610ef457806390eeb02b14610ed05780639fa12d0b14610dd85780639fdc864214610d42578063ba70f75714610d10578063c2b40ae414610ce4578063c78aa3ed14610ca5578063cc013d85146109f3578063cd87a3b4146109d7578063e5285dcc146109a0578063e82955881461097a578063ec7329591461093f578063ed33639f146108fa578063efb68ee91461070c578063f178e47c146106e0578063f2fde38b14610652578063f8f534241461026a578063f9902bb1146101ab5763fc7e9c6f1461018057600080fd5b346101a65760003660031901126101a657602060035463ffffffff60405191831c168152f35b600080fd5b346101a65760203660031901126101a6576101c46116ca565b6101cc611897565b6001600160a01b031660008181526008602052604090205460ff161561022e57806000526008602052604060002060ff1981541690557f945abea5c46c52351c0135978bf987fe1fb685d09bdf509f3a325ae79747ce676020604051428152a2005b60405162461bcd60e51b8152602060048201526014602482015273155cd95c881b9bdd081dda1a5d195b1a5cdd195960621b6044820152606490fd5b60403660031901126101a6576004356001600160401b0381116101a65761029590369060040161181c565b906024356001600160401b0381116101a6576102b68391369060040161181c565b929060005b8381106102c457005b6102cf8185856118d2565b358582101561063c5760059582871b840135601e19853603018112156101a6578401966001600160401b038835116101a6578735901b360360208801136101a657610318611897565b6103206118f6565b81600052600660205260ff604060002054166105ed5763ffffffff60035460201c169363ffffffff6103588160005460a01c16611b34565b16851461058f576000958592845b63ffffffff60005460a01c1663ffffffff8a161015610434576103e1637fffffff91600187161560001461041a57806103a463ffffffff8d16611c0b565b9163ffffffff8d1660005260016020526040600020555b7f000000000000000000000000000000000000000000000000000000000000000061199b565b9460011c169763ffffffff808216146104045763ffffffff166001019793610366565b634e487b7160e01b600052601160045260246000fd5b63ffffffff8b1660005260016020526040600020546103bb565b9198969350965097909760035463ffffffff601e81610454818516611b5a565b160616809163ffffffff191617600355600052600260205260406000205561047b82611b5a565b67ffffffff000000006003549160201b169067ffffffff000000001916176003558260005260066020526040600020600160ff1982541617905560005b8135811061050b575050907fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e3604061050194938151908152426020820152a260016004556118c3565b93909291936102bb565b83600052600760205260406000209061053161052c828535602087016118d2565b6118e2565b825492600160401b84101561057957836105539160016105749601815561187f565b819291549060031b9160018060a01b03809116831b921b19161790556118c3565b6104b8565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b634e487b7160e01b600052603260045260246000fd5b346101a65760203660031901126101a65761066b6116ca565b610673611897565b6001600160a01b039081169081156106c757600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b346101a65760203660031901126101a65760043560005260016020526020604060002054604051908152f35b346101a65760e03660031901126101a6576004356001600160401b0381116101a65761073c90369060040161181c565b6101c0526024356001600160401b0381116101a65761075f90369060040161181c565b91906044356001600160401b0381116101a65761078090369060040161181c565b6101a052610120526064356001600160401b0381116101a6576107a790369060040161181c565b61018052610140526084356001600160401b0381116101a6576107ce90369060040161181c565b60c0526080526001600160401b0360a435116101a6576107f33660a43560040161181c565b60e0526101005260c4356001600160401b0381116101a65761081990369060040161181c565b60a0526101605260005b6101c051808210156108f8578161083a91856118d2565b35908481101561063c578060051b830135601e19843603018112156101a65783016001600160401b038135116101a6578035360360208201136101a657610888826101a051610120516118d2565b3561089a8361018051610140516118d2565b35916108ab8460c0516080516118d2565b35946001600160a01b03861686036101a6576108f3956108ee946108d861052c8860a051610160516118d2565b9460e0519461010051946020823592019061222b565b6118c3565b610823565b005b346101a65760003660031901126101a6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101a65760003660031901126101a65760206040517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b346101a65760203660031901126101a6576020610998600435611c0b565b604051908152f35b346101a65760203660031901126101a65760206109cd600435600052600560205260ff6040600020541690565b6040519015158152f35b346101a65760003660031901126101a6576020604051601e8152f35b6109fc3661184c565b91610a056118f6565b806000526020906006825260ff60406000205416610c565763ffffffff93600392858454821c169486610a3e8160005460a01c16611b34565b168614610bf857946000947f0000000000000000000000000000000000000000000000000000000000000000918590805b8a60005460a01c168b8a1690811015610ae0578b91610ab9637fffffff9260019b8c841615600014610ace5780610aa583611c0b565b926000528d8c526040600020555b8961199b565b991c1698168a81146104045760010197610a6f565b906000528b8a52604060002054610ab3565b5050848987898d875490601e81610af8818516611b5a565b160616809163ffffffff191617885560005260028452604060002055610b1d84611b5a565b865467ffffffff00000000191690841b67ffffffff000000001617865560008581526006845260408120805460ff1916600190811790915596905b828110610b965787877fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e36040898982519182524290820152a2600455005b8660005260078552604060002090610bb261052c8286886118d2565b825492600160401b8410156105795783610bd3918c610bf39601815561187f565b8192915490861b9160018060a01b03809116831b921b19161790556118c3565b610b58565b60405162461bcd60e51b815260048101839052603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b815260048101839052602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b346101a65760203660031901126101a6576001600160a01b03610cc66116ca565b166000526008602052602060ff604060002054166040519015158152f35b346101a65760203660031901126101a65760043560005260026020526020604060002054604051908152f35b346101a65760003660031901126101a65763ffffffff6003541660005260026020526020604060002054604051908152f35b346101a65760e03660031901126101a6576024356001600160401b038082116101a657366023830112156101a6578160040135908082116101a65736602483850101116101a657610d91611780565b9060a4359081116101a657610daa90369060040161181c565b60c435939092906001600160a01b03851685036101a6576108f895606435916024604435920160043561222b565b346101a6576020806003193601126101a6576004356001600160401b0381116101a657610e0990369060040161181c565b90610e1382611796565b90610e2160405192836116fb565b828252610e2d83611796565b8285019390601f190136853760005b818110610e895750505090604051928392818401908285525180915260408401929160005b828110610e7057505050500390f35b8351151585528695509381019392810192600101610e61565b80610eb0610e9b610eb99385876118d2565b35600052600560205260ff6040600020541690565b610ebe576118c3565b610e3c565b6001610eca8287611971565b526118c3565b346101a65760003660031901126101a657602063ffffffff60035416604051908152f35b346101a65760603660031901126101a6576004356001600160a01b03811681036101a657610998602091604435906024359061199b565b346101a65760003660031901126101a6576000546040516001600160a01b039091168152602090f35b346101a65760203660031901126101a6576004356000526006602052602060ff604060002054166040519015158152f35b346101a65760403660031901126101a6576024356004356000526007602052604060002080548210156101a657602091610fbe9161187f565b905460405160039290921b1c6001600160a01b03168152f35b346101a65760203660031901126101a657610ff06116ca565b610ff8611897565b6001600160a01b031660008181526008602052604090205461101d9060ff16156121df565b8060005260086020526040600020600160ff198254161790557f3e2d12b27238f71a0aa434851aa5f1ac898b05c1694b24c6ea339b76927ea4f76020604051428152a2005b346101a65760003660031901126101a65761107b611897565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101a65760203660031901126101a65760206109cd600435611b6f565b6110e23661184c565b916110eb611897565b6110f36118f6565b806000526020906006825260ff60406000205416610c565763ffffffff93600392858454821c16948661112c8160005460a01c16611b34565b168614610bf857946000947f0000000000000000000000000000000000000000000000000000000000000000918590805b8a60005460a01c168b8a16908110156111a8578b91611193637fffffff9260019b8c841615600014610ace5780610aa583611c0b565b991c1698168a8114610404576001019761115d565b5050848987898d875490601e816111c0818516611b5a565b160616809163ffffffff1916178855600052600284526040600020556111e584611b5a565b865467ffffffff00000000191690841b67ffffffff000000001617865560008581526006845260408120805460ff1916600190811790915596905b82811061125e5787877fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e36040898982519182524290820152a2600455005b866000526007855260406000209061127a61052c8286886118d2565b825492600160401b8410156105795783610bd3918c61129b9601815561187f565b611220565b346101a65760003660031901126101a657602063ffffffff60005460a01c16604051908152f35b346101a65760003660031901126101a65760206040517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b60c03660031901126101a6576001600160401b03600435602480358381116101a657611332903690600401611762565b9060443593606435611342611780565b9160a4359081116101a657366023820112156101a65761136b90369085816004013591016117ad565b956113746118f6565b816000526020946005865260ff604060002054166116145761139582611b6f565b156115d057906113fb90604051906113ac826116e0565b815283878201528660018060a01b03809616938460408401526000606084015260006080840152600060a084015260405193849163695ef6f960e01b835260e0600484015260e4830190611931565b8882019360005b600681106115b75750508192935003816000887f0000000000000000000000000000000000000000000000000000000000000000165af19081156114fc5760009161159a575b501561155d5760005b86600052600786526040600020805482101561150857908689828860008961148861147f856114ab9a61187f565b95905496611971565b519460405180998197829663c16e50ef60e01b84528a6004850152830190611931565b039460031b1c165af19182156114fc576114ca926114cf575b506118c3565b611451565b6114ee90883d8a116114f5575b6114e681836116fb565b810190611919565b50896114c4565b503d6114dc565b6040513d6000823e3d90fd5b7fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f606084868a81600052600581526040600020600160ff19825416179055604051928352820152426040820152a16001600455005b60405162461bcd60e51b8152600481018690526016818601527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b6115b19150863d88116114f5576114e681836116fb565b88611448565b81518652948401948b9487945090910190600101611402565b60405162461bcd60e51b815260048101879052601c818701527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b60405162461bcd60e51b815260048101879052601f818701527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b346101a65760003660031901126101a6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101a65760203660031901126101a6576020906004356000526005825260ff6040600020541615158152f35b600435906001600160a01b03821682036101a657565b60c081019081106001600160401b0382111761057957604052565b90601f801991011681019081106001600160401b0382111761057957604052565b9291926001600160401b0382116105795760405191611745601f8201601f1916602001846116fb565b8294818452818301116101a6578281602093846000960137010152565b9080601f830112156101a65781602061177d9335910161171c565b90565b608435906001600160a01b03821682036101a657565b6001600160401b0381116105795760051b60200190565b929190926117ba84611796565b916117c860405193846116fb565b829480845260208094019060051b8301928284116101a65780915b8483106117f257505050505050565b82356001600160401b0381116101a65786916118118684938601611762565b8152019201916117e3565b9181601f840112156101a6578235916001600160401b0383116101a6576020808501948460051b0101116101a657565b9060406003198301126101a65760043591602435906001600160401b0382116101a65761187b9160040161181c565b9091565b805482101561063c5760005260206000200190600090565b6000546001600160a01b031633036118ab57565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146104045760010190565b919081101561063c5760051b0190565b356001600160a01b03811681036101a65790565b600260045414611907576002600455565b604051633ee5aeb560e01b8152600490fd5b908160209103126101a6575180151581036101a65790565b919082519283825260005b84811061195d575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161193c565b805182101561063c5760209160051b010190565b91908260409103126101a6576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019384831015611af05784821015611aa15760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa978815611a9757869798859697938991611a75575b506044939486519889968795865208600484015260248301525afa928315611a6a5792611a4057505090565b611a5f9250803d10611a63575b611a5781836116fb565b810190611985565b5090565b503d611a4d565b9051903d90823e3d90fd5b60449450611a909150863d8811611a6357611a5781836116fb565b9093611a14565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b8015611b545760ff8111610404576001901b9063ffffffff821161040457565b50600190565b90600163ffffffff8093160191821161040457565b8015611c055763ffffffff8060035416918260019384805b611b97575b505050505050600090565b15611bf6575b60009084811690818352600260205260408320548514611bed57859115611be5575b168015611bd157600019019085611b87565b634e487b7160e01b82526011600452602482fd5b50601e611bbf565b50505050505090565b8184821603611b9d5780611b8c565b50600090565b80611c3557507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b60018103611c6257507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103611c8f57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b60038103611cbc57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b60048103611ce957507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103611d1657507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103611d4357507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103611d7057507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103611d9d57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103611dc957507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a8103611df657507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b8103611e2357507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103611e5057507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103611e7d57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103611eaa57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103611ed757507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103611f0457507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103611f3157507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103611f5e57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103611f8b57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103611fb857507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b60158103611fe557507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b6016810361201257507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b6017810361203f57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b6018810361206c57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b6019810361209957507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a81036120c657507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036120f357507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c810361211f57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d810361214c57507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e810361217957507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f036121a4577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fd5b156121e657565b60405162461bcd60e51b815260206004820152601860248201527f5573657220616c72656164792077686974656c697374656400000000000000006044820152606490fd5b97939195600897959399919961227760018060a01b038097169261226f60009d8e9b868d5260209d8e5261226860ff60409e8f90205416156121df565b369161171c565b9836916117ad565b946122806118f6565b848c5260058a5260ff898d2054166125195761229b82611b6f565b156124d5578960e0988d896122f5948d51966122b6886116e0565b875289858801521694858d8201528160608201528160808201528160a08201528c5194859363695ef6f98e1b855260049d8e86015260e4850190611931565b9082602485015b600682106124b55750505082809103918b7f0000000000000000000000000000000000000000000000000000000000000000165af19081156124ab578c9161248e575b5015612452578a5b8a8c5260078a52888c2080548210156123e8578a8a838f83908c8c8f61237c6123738761239d9b61187f565b97905493611971565b5196519889978896879363c16e50ef60e01b85528401526024830190611931565b039460031b1c165af180156123de57906123bc92916123c157506118c3565b612347565b6123d7908c8d3d106114f5576114e681836116fb565b50386114c4565b8a513d8f823e3d90fd5b505060019950600895508998945060607fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f918a949c989395808a52600588528a8a2060ff199d8e8254161790558a5191825287820152428a820152a1558352522091825416179055565b875162461bcd60e51b81528088018a9052601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b6124a591508a3d8c116114f5576114e681836116fb565b3861233f565b89513d8e823e3d90fd5b8287939650600194979295505181520193019101928f918e9486946122fc565b885162461bcd60e51b8152600481018b9052601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b885162461bcd60e51b8152600481018b9052601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fdfea2646970667358221220d8340bf95e46911375957685f646c2e3f17644ced0ce7fa2ca27d31f7f949fb064736f6c63430008140033a2646970667358221220d92e92b4f72cfdbeba6bc5de122d23a5b390844d6fe586250cc23c8d5deb299764736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/useCases/whitelist/WhitelistFactory.sol:WhitelistFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1243,
        "contract": "contracts/useCases/whitelist/WhitelistFactory.sol:WhitelistFactory",
        "label": "defaultVerifier",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IVerifier)263"
      },
      {
        "astId": 1246,
        "contract": "contracts/useCases/whitelist/WhitelistFactory.sol:WhitelistFactory",
        "label": "defaultHasher",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IHasher)561"
      },
      {
        "astId": 1248,
        "contract": "contracts/useCases/whitelist/WhitelistFactory.sol:WhitelistFactory",
        "label": "defaultMerkleTreeHeight",
        "offset": 20,
        "slot": "2",
        "type": "t_uint32"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IHasher)561": {
        "encoding": "inplace",
        "label": "contract IHasher",
        "numberOfBytes": "20"
      },
      "t_contract(IVerifier)263": {
        "encoding": "inplace",
        "label": "contract IVerifier",
        "numberOfBytes": "20"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}
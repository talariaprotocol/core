/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC1155Transfer,
  ERC1155TransferInterface,
} from "../../contracts/ERC1155Transfer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "contract IERC1155",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ConsumeCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NewCode",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "TransferAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "TransferIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "createTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "setCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC1155",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validationModules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346200023957601f620025b938819003918201601f1916830191906001600160401b038311848410176200023e578160809285926040958652833981010312620002395781516001600160a01b0380821682036200023957602092838501519382851685036200023957818601519263ffffffff968785168095036200023957606001519081168091036200023957600380546001600160401b03191690558315620001ea5781841015620001a7576000958463ffffffff19885416178755608052855b8781168581101562000110579081620000df8a9362000254565b908952600185528589205516878114620000fc57600101620000c5565b634e487b7160e01b87526011600452602487fd5b50509491959092600019018181116200019357620001348793926002921662000254565b82805293522055600160045560a052600880546001600160a01b03191691909117905551611d6690816200085382396080518181816101fc0152818161036901526106de015260a051818181610c9e015281816110b201526111ea0152f35b634e487b7160e01b83526011600452602483fd5b50606491519062461bcd60e51b82526004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152fd5b50608491519062461bcd60e51b82526004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b806200027f57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b60018103620002ad57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103620002db57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b600381036200030957507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200033757507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036200036557507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b600681036200039357507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103620003c157507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103620003ef57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b600981036200041c57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200044a57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036200047857507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103620004a657507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103620004d457507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e81036200050257507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f81036200053057507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b601081036200055e57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036200058c57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103620005ba57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103620005e857507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b601481036200061657507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200064457507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b601681036200067257507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103620006a057507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b60188103620006ce57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103620006fc57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a81036200072a57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036200075857507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036200078557507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d8103620007b357507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103620007e157507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f036200080d577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826317cc915c14611219575081632b7ac3f3146111d55781633e7fd3b414610fa8578163414a37ba14610f6d5781634488e59514610b6e5781634ecf518b14610b4b5781636d9833e314610b2b578163838a11fd14610add578163839df94514610ab05781638ea3099e14610a7757816390eeb02b14610a525781639fa12d0b14610950578163a5ff958b14610928578163b961ab0d14610659578163ba70f7571461062b578163c2b40ae414610603578163cc013d85146102e4578163cd87a3b4146102c8578163e5285dcc14610290578163e829558814610266578163ec7329591461022b578163ed33639f146101e7578163f178e47c146101bf578163fa6997a61461019357508063fc0c546a1461016b5763fc7e9c6f1461014357600080fd5b346101675781600319360112610167576003549051602091821c63ffffffff168152f35b5080fd5b503461016757816003193601126101675760085490516001600160a01b039091168152602090f35b9050346101bb5760203660031901126101bb5760209282913581526009845220549051908152f35b8280fd5b9050346101bb5760203660031901126101bb5760209282913581526001845220549051908152f35b505034610167578160031936011261016757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610167578160031936011261016757602090517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b82843461028d57602036600319011261028d57506102866020923561175c565b9051908152f35b80fd5b82843461028d57602036600319011261028d57506102bf60209235600052600560205260ff6040600020541690565b90519015158152f35b50503461016757816003193601126101675760209051601e8152f35b82848160031936011261028d576024928035843567ffffffffffffffff81116105ff5761031490369084016113b3565b61031f929192611447565b8185526020906006825260ff87872054166105b35763ffffffff96600394888654851c169489610351818b5416611685565b1686146105585790919294889495819783988c889a817f00000000000000000000000000000000000000000000000000000000000000009a5b5416918c169182101561041c57889796959493928f928f9a908d637fffffff946103d59360019e8f8088161560001461040d5783946103c88761175c565b9683525220555b8d6114ec565b991c169a168d81146103fb5760010199959694959394929391929091908d90818e61038a565b634e487b7160e01b8d5260118c528e8dfd5b919390929483525220546103cf565b9499985050509298999b939a90949750825490601e8161043d8185166116ab565b160616809163ffffffff19161783558b5260028552868b205561045f856116ab565b815467ffffffff00000000191690851b67ffffffff0000000016178155868a5260068452858a20805460ff19166001908117909155988a5b8481106104d65750505050509082917fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e393519182524290820152a25580f35b888c5260078652878c206104eb828785611437565b6001600160a01b03919035828116919082900361055457805490600160401b821015610541578e8201815561053c94939291610526916113e4565b9092835491881b92831b921b1916179055611412565b610497565b50634e487b7160e01b8f5260418d52868ffd5b8e80fd5b825162461bcd60e51b81528089018690526030818d01527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b865162461bcd60e51b81528086018390526021818a01527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b8380fd5b9050346101bb5760203660031901126101bb5760209282913581526002845220549051908152f35b5050346101675781600319360112610167578060209263ffffffff6003541681526002845220549051908152f35b8284608036600319011261028d57602492833567ffffffffffffffff81116101bb5761068890369083016113b3565b90610691611447565b8235918285526020906006825260ff87872054166105b35763ffffffff96600394888654851c1694896106c6818b5416611685565b1686146105585790919294889495819784988c889a817f00000000000000000000000000000000000000000000000000000000000000009a5b5416918c169182101561076357889796959493928f928f9a908d637fffffff9461073d9360019e8f8088161560001461040d5783946103c88761175c565b991c169a168d81146103fb5760010199959694959394929391929091908d90818e6106ff565b915050859950869a97508d9b9c9693959496825490601e816107868185166116ab565b160616809163ffffffff19161783558d5260028952838d20556107a8856116ab565b815467ffffffff00000000191690891b67ffffffff0000000016178155838c5260068852828c20805460ff19166001908117909155958c5b8381106108b657505050507fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e3919281519081524287820152a281556008546001600160a01b031694853b156108b257845191637921219560e11b8352339083015230908201528560443591826044820152818160c481836064359b8c606484015260a060848401528160a48401525af180156108a857610890575b5092600a935260098252838620555282205580f35b61089990611275565b6108a457858761087b565b8580fd5b86513d84823e3d90fd5b8680fd5b91935091938c5260078852898c206108cf828685611437565b6001600160a01b03919035828116919082900361055457805490600160401b8210156109155781610526918b61090a979695940181556113e4565b918893918a936107e0565b50634e487b7160e01b8f5260418a528d8ffd5b9050346101bb5760203660031901126101bb576020928291358152600a845220549051908152f35b9050823461028d576020918260031936011261016757803567ffffffffffffffff81116101bb57849291610986913691016113b3565b91906109918361132b565b9061099e85519283611289565b8382526109aa8461132b565b8287019490601f1901368637835b8181106109ff5750505083519485948186019282875251809352850193925b8281106109e657505050500390f35b83511515855286955093810193928101926001016109d7565b80610a2c610a17610a359385879c99989a9b9c611437565b35600052600560205260ff6040600020541690565b610a4057611412565b9695949293966109b8565b6001610a4c82896114c2565b52611412565b50503461016757816003193601126101675760209063ffffffff600354169051908152f35b9050346101bb5760603660031901126101bb5735916001600160a01b038316830361028d575061028660209260443590602435906114ec565b9050346101bb5760203660031901126101bb578160209360ff923581526006855220541690519015158152f35b82843461028d578160031936011261028d5760243592358152600760205281812090815484101561028d5750602092610b15916113e4565b905491519160018060a01b039160031b1c168152f35b82843461028d57602036600319011261028d57506102bf602092356116c0565b50503461016757816003193601126101675763ffffffff60209254169051908152f35b919050346101bb5760c03660031901126101bb5781359160249182359267ffffffffffffffff8085116108b257366023860112156108b2578484013590808211610f695736838388010111610f69576044359060643590610bcd611315565b9360a435918211610f6557610bf7610beb610bff9336908b016113b3565b9a9092883692016112ab565b983691611343565b91610c08611447565b818a526020976005895260ff878c205416610f2357610c26826116c0565b15610ee1579088888c60e0938a5190610c3e82611243565b81528684820152610c8560018060a01b03809a1696878d8401528360608401528360808401528360a08401528c5196879563695ef6f9821b875286015260e4850190611482565b9082848c015b60068210610ec1575050508280910391897f0000000000000000000000000000000000000000000000000000000000000000165af1908115610eb7578b91610e9a575b5015610e5f579089939291845b8a865260078a528786208054821015610d8e578a8883828a8a8f8f9790610d32610d13610d0a8f9489906113e4565b989054946114c2565b519951998a988997889463c16e50ef60e01b8652850152830190611482565b039460031b1c165af18015610d845790610d529291610d57575b50611412565b610cdb565b610d76908c8d3d10610d7d575b610d6e8183611289565b81019061146a565b5038610d4c565b503d610d64565b89513d89823e3d90fd5b5050868587868b8d8f7fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f6060879a80895260058552898920600160ff198254161790558951908b825285820152428a820152a160018355855260098152600a868620549152858520549260085416803b156108a45760c49386928851998a978896637921219560e11b885230908801528601526044850152606484015260a060848401528160a48401525af1908115610e565750610e4a575080f35b610e5390611275565b80f35b513d84823e3d90fd5b855162461bcd60e51b81528088018990526016818701527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b610eb19150893d8b11610d7d57610d6e8183611289565b38610cce565b87513d8d823e3d90fd5b8287939650600194979295505181520193019101928e918d948694610c8b565b865162461bcd60e51b81528089018a9052601c818801527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b865162461bcd60e51b81528089018a9052601f818801527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b8a80fd5b8780fd5b505034610167578160031936011261016757602090517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b91905060c03660031901126101bb5781359167ffffffffffffffff91602480358481116108b257610fdc90369085016112f7565b93604435606435610feb611315565b9260a4359081116111d157366023820112156111d15761101390369086818a01359101611343565b9161101c611447565b818a526020976005895260ff878c205416610f235761103a826116c0565b15610ee1579088888c60e0938a519061105282611243565b8152868482015261109960018060a01b03809a1696878d8401528360608401528360808401528360a08401528c5196879563695ef6f9821b875286015260e4850190611482565b9082848c015b600682106111b1575050508280910391897f0000000000000000000000000000000000000000000000000000000000000000165af1908115610eb7578b91611194575b5015610e5f579089939291845b8a865260078a528786208054821015611142578a8883828a8a8f8f979061111e610d13610d0a8f9489906113e4565b039460031b1c165af18015610d84579061113d9291610d575750611412565b6110ef565b8660018b7fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f60608f8e8a8a92818952600581528289208860ff1982541617905582519384528301524290820152a15580f35b6111ab9150893d8b11610d7d57610d6e8183611289565b386110e2565b8287939650600194979295505181520193019101928e918d94869461109f565b8980fd5b505034610167578160031936011261016757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b929150346105ff5760203660031901126105ff573583526005602090815292205460ff1615158152f35b60c0810190811067ffffffffffffffff82111761125f57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161125f57604052565b90601f8019910116810190811067ffffffffffffffff82111761125f57604052565b92919267ffffffffffffffff821161125f57604051916112d5601f8201601f191660200184611289565b8294818452818301116112f2578281602093846000960137010152565b600080fd5b9080601f830112156112f257816020611312933591016112ab565b90565b608435906001600160a01b03821682036112f257565b67ffffffffffffffff811161125f5760051b60200190565b929190926113508461132b565b9161135e6040519384611289565b829480845260208094019060051b8301928284116112f25780915b84831061138857505050505050565b823567ffffffffffffffff81116112f25786916113a886849386016112f7565b815201920191611379565b9181601f840112156112f25782359167ffffffffffffffff83116112f2576020808501948460051b0101116112f257565b80548210156113fc5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60001981146114215760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156113fc5760051b0190565b600260045414611458576002600455565b604051633ee5aeb560e01b8152600490fd5b908160209103126112f2575180151581036112f25790565b919082519283825260005b8481106114ae575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161148d565b80518210156113fc5760209160051b010190565b91908260409103126112f2576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001938483101561164157848210156115f25760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa9788156115e8578697988596979389916115c6575b506044939486519889968795865208600484015260248301525afa9283156115bb579261159157505090565b6115b09250803d106115b4575b6115a88183611289565b8101906114d6565b5090565b503d61159e565b9051903d90823e3d90fd5b604494506115e19150863d88116115b4576115a88183611289565b9093611565565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b80156116a55760ff8111611421576001901b9063ffffffff821161142157565b50600190565b90600163ffffffff8093160191821161142157565b80156117565763ffffffff8060035416918260019384805b6116e8575b505050505050600090565b15611747575b6000908481169081835260026020526040832054851461173e57859115611736575b168015611722576000190190856116d8565b634e487b7160e01b82526011600452602482fd5b50601e611710565b50505050505090565b81848216036116ee57806116dd565b50600090565b8061178657507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b600181036117b357507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b600281036117e057507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b6003810361180d57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b6004810361183a57507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b6005810361186757507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b6006810361189457507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b600781036118c157507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b600881036118ee57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b6009810361191a57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a810361194757507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b810361197457507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c81036119a157507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d81036119ce57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e81036119fb57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103611a2857507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103611a5557507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103611a8257507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103611aaf57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103611adc57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103611b0957507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b60158103611b3657507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b60168103611b6357507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103611b9057507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b60188103611bbd57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103611bea57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a8103611c1757507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b8103611c4457507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c8103611c7057507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d8103611c9d57507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103611cca57507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03611cf5577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fdfea26469706673582212205c31c23747927e5ae69c4f8d2740fe68d86be8070493c523422ea154822cbb6a64736f6c63430008140033";

type ERC1155TransferConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155TransferConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Transfer__factory extends ContractFactory {
  constructor(...args: ERC1155TransferConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      _token,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      _token,
      overrides || {}
    ) as Promise<
      ERC1155Transfer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1155Transfer__factory {
    return super.connect(runner) as ERC1155Transfer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155TransferInterface {
    return new Interface(_abi) as ERC1155TransferInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155Transfer {
    return new Contract(address, _abi, runner) as unknown as ERC1155Transfer;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NumberContract,
  NumberContractInterface,
} from "../../../contracts/examples/NumberContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract EarlyAccessCodes",
        name: "_earlyAccessCodes",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "Success",
    type: "event",
  },
  {
    inputs: [],
    name: "earlyAccessCodes",
    outputs: [
      {
        internalType: "contract EarlyAccessCodes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "number",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "setNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007457601f6103a438819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161031490816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c9081635b0467a614610299575080638381f58a1461027b5763b95f19e01461004257600080fd5b346102785760031960c036820112610274576024803567ffffffffffffffff811161027057366023820112156102705780600401359267ffffffffffffffff841161026c573683858401011161026c5767ffffffffffffffff6084351161026c5736602360843501121561026c5767ffffffffffffffff608435600401351161026c576084356004013560051b3684826084350101116102685785546001600160a01b031692833b156102645794919086939161012260405197889563048be6e760e51b8752600435600488015260c0898801528860c4880192016102bd565b90604435604486015260643560648601523360848601528482030160a485015260843560040135815260208082019282010191866084350191865b6084356004013581106101ed57505050508383809203925af180156101e2576101b6575b8260a4356001557f3b0a8ddef325df2bfdfa6b430ae4c8421841cd135bfa8fb5e432f200787520bb602060405160018152a180f35b67ffffffffffffffff82116101d057506040523880610181565b634e487b7160e01b8352604160045282fd5b6040513d85823e3d90fd5b818503601f190183529496509194509290918435608435360360421901811215610260576084350167ffffffffffffffff888201351161026057878101353603604482011361026057602061024d6001938360448c8596013591016102bd565b960194019101908794928996949261015d565b8980fd5b8680fd5b8580fd5b8480fd5b8380fd5b5080fd5b80fd5b50346102785780600319360112610278576020600154604051908152f35b90503461027457816003193601126102745790546001600160a01b03168152602090f35b908060209392818452848401376000828201840152601f01601f191601019056fea264697066735822122014031ae21ef3b982e802d98460e5c4b601b8be10dedf539801f85e19ece6d46464736f6c63430008140033";

type NumberContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NumberContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NumberContract__factory extends ContractFactory {
  constructor(...args: NumberContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _earlyAccessCodes: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_earlyAccessCodes, overrides || {});
  }
  override deploy(
    _earlyAccessCodes: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_earlyAccessCodes, overrides || {}) as Promise<
      NumberContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NumberContract__factory {
    return super.connect(runner) as NumberContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NumberContractInterface {
    return new Interface(_abi) as NumberContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NumberContract {
    return new Contract(address, _abi, runner) as unknown as NumberContract;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EarlyAccessCodes,
  EarlyAccessCodesInterface,
} from "../../../contracts/examples/EarlyAccessCodes";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ConsumeCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NewCode",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_commitments",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "_proofs",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
      {
        internalType: "address payable[]",
        name: "_tos",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "bulkConsumeEarlyAccessCodes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_commitments",
        type: "bytes32[]",
      },
      {
        internalType: "address[][]",
        name: "_validationModules",
        type: "address[][]",
      },
    ],
    name: "bulkCreateEarlyAccessCodes",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeEarlyAccessCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "createEarlyAccessCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "setCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validationModules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346200021b57601f6200298d38819003918201601f191683019291906001600160401b03841183851017620002205781606092849260409687528339810103126200021b5780516001600160a01b039081811681036200021b576020928381015192831683036200021b5784015163ffffffff938482168092036200021b57600380546001600160401b03191690558115620001cc578082101562000189576000938263ffffffff19865416178555608052835b8581168381101562000100579081620000cf889362000236565b908752600184528887205516858114620000ec57600101620000b5565b634e487b7160e01b85526011600452602485fd5b505092919390600019018181116200017557620001238693926002921662000236565b93828052522055600160045560a0525161215890816200083582396080518181816102a20152818161057c015281816106b40152610dc2015260a0518181816110ac01528181611303015261168a0152f35b634e487b7160e01b83526011600452602483fd5b60649086519062461bcd60e51b82526004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152fd5b60849086519062461bcd60e51b82526004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b806200026157507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b600181036200028f57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103620002bd57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b60038103620002eb57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200031957507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036200034757507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b600681036200037557507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103620003a357507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103620003d157507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103620003fe57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200042c57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036200045a57507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c81036200048857507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103620004b657507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103620004e457507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f81036200051257507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b601081036200054057507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036200056e57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b601281036200059c57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103620005ca57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103620005f857507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200062657507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b601681036200065457507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b601781036200068257507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b60188103620006b057507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103620006de57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a81036200070c57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036200073a57507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036200076757507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d81036200079557507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103620007c357507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03620007ef577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe608080604052600436101561001357600080fd5b60003560e01c90816317cc915c14611332575080632b7ac3f3146112ed5780633e7fd3b414610f97578063414a37ba14610f5c5780634ecf518b14610f385780636c31a67d14610d6d5780636d9833e314610d4f578063838a11fd14610cfd578063839df94514610ccc5780638ea3099e14610c9557806390eeb02b14610c71578063917cdce014610bef5780639fa12d0b14610af7578063b07e1ffd14610971578063ba70f7571461093f578063c2b40ae414610913578063cc013d851461065f578063cd87a3b414610643578063e5285dcc1461060c578063e8295588146105e6578063ec732959146105ab578063ed33639f14610566578063f178e47c1461053a578063f8f534241461015d5763fc7e9c6f1461013257600080fd5b3461015857600036600319011261015857602060035463ffffffff60405191831c168152f35b600080fd5b6040366003190112610158576004356001600160401b0381116101585761018890369060040161149b565b906024356001600160401b038111610158576101a98391369060040161149b565b929060005b8381106101b757005b6101c2818585611525565b35858210156105245760059582871b840135601e1985360301811215610158578401966001600160401b03883511610158578735901b360360208801136101585761020b611535565b81600052600660205260ff604060002054166104d55763ffffffff60035460201c169363ffffffff6102408160005416611a77565b168514610477576000958592845b63ffffffff6000541663ffffffff8a161015610319576102c6637fffffff9160018716156000146102ff578061028963ffffffff8d16611b4e565b9163ffffffff8d1660005260016020526040600020555b7f00000000000000000000000000000000000000000000000000000000000000006118de565b9460011c169763ffffffff808216146102e95763ffffffff16600101979361024e565b634e487b7160e01b600052601160045260246000fd5b63ffffffff8b1660005260016020526040600020546102a0565b9198969350965097909760035463ffffffff601e81610339818516611a9d565b160616809163ffffffff191617600355600052600260205260406000205561036082611a9d565b67ffffffff000000006003549160201b169067ffffffff000000001916176003558260005260066020526040600020600160ff1982541617905560005b813581106103f0575050907fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e360406103e694938151908152426020820152a26001600455611516565b93909291936101ae565b83600052600760205260406000209061040e81843560208601611525565b6001600160a01b0390358181169081900361015857835493600160401b851015610461578461044591600161045c970181556114fe565b909283549160031b92831b921b1916179055611516565b61039d565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b634e487b7160e01b600052603260045260246000fd5b346101585760203660031901126101585760043560005260016020526020604060002054604051908152f35b34610158576000366003190112610158576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101585760003660031901126101585760206040517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b34610158576020366003190112610158576020610604600435611b4e565b604051908152f35b34610158576020366003190112610158576020610639600435600052600560205260ff6040600020541690565b6040519015158152f35b34610158576000366003190112610158576020604051601e8152f35b610668366114cb565b91610671611535565b806000526020906006825260ff604060002054166108c45763ffffffff93600392858454821c1694866106a78160005416611a77565b16861461086657946000947f0000000000000000000000000000000000000000000000000000000000000000918590805b8a600054168b8a1690811015610746578b9161071f637fffffff9260019b8c841615600014610734578061070b83611b4e565b926000528d8c526040600020555b896118de565b991c1698168a81146102e957600101976106d8565b906000528b8a52604060002054610719565b5050848987898d875490601e8161075e818516611a9d565b160616809163ffffffff19161788556000526002845260406000205561078384611a9d565b865467ffffffff00000000191690841b67ffffffff000000001617865560008581526006845260408120805460ff1916600190811790915596905b8281106107fc5787877fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e36040898982519182524290820152a2600455005b8660005260078552604060002090610815818587611525565b6001600160a01b0390358181169081900361015857835493600160401b851015610461578461084b918d610861970181556114fe565b9092835491871b92831b921b1916179055611516565b6107be565b60405162461bcd60e51b815260048101839052603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b815260048101839052602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b346101585760203660031901126101585760043560005260026020526020604060002054604051908152f35b346101585760003660031901126101585763ffffffff6003541660005260026020526020604060002054604051908152f35b346101585760c0366003190112610158576004356001600160401b038111610158576109a190369060040161149b565b906024356001600160401b038111610158576109c190369060040161149b565b906044356001600160401b038111610158576109e190369060040161149b565b94906064356001600160401b03811161015857610a0290369060040161149b565b90916084356001600160401b03811161015857610a2390369060040161149b565b60a4939193356001600160401b03811161015857610a4590369060040161149b565b97909660005b818110610a5457005b610a5f81838e611525565b35908b811015610524578060051b840135601e19853603018112156101585784016001600160401b038135116101585780353603602082011361015857610aa88f83908a611525565b3590610ab583898d611525565b3593610ac284898d611525565b356001600160a01b038116810361015857610af2958f93948f9395610aed96602082359201906115c4565b611516565b610a4b565b3461015857602080600319360112610158576004356001600160401b03811161015857610b2890369060040161149b565b90610b3282611415565b90610b40604051928361137a565b828252610b4c83611415565b8285019390601f190136853760005b818110610ba85750505090604051928392818401908285525180915260408401929160005b828110610b8f57505050500390f35b8351151585528695509381019392810192600101610b80565b80610bcf610bba610bd8938587611525565b35600052600560205260ff6040600020541690565b610bdd57611516565b610b5b565b6001610be982876115b0565b52611516565b346101585760c0366003190112610158576001600160401b0360243581811161015857366023820112156101585780600401359082821161015857366024838301011161015857610c3e6113ff565b60a43593841161015857610c59610c6f94369060040161149b565b93909260643591602460443592016004356115c4565b005b3461015857600036600319011261015857602063ffffffff60035416604051908152f35b34610158576060366003190112610158576004356001600160a01b03811681036101585761060460209160443590602435906118de565b34610158576020366003190112610158576004356000526006602052602060ff604060002054166040519015158152f35b346101585760403660031901126101585760243560043560005260076020526040600020805482101561015857602091610d36916114fe565b905460405160039290921b1c6001600160a01b03168152f35b34610158576020366003190112610158576020610639600435611ab2565b610d76366114cb565b91610d7f611535565b806000526020906006825260ff604060002054166108c45763ffffffff93600392858454821c169486610db58160005416611a77565b16861461086657946000947f0000000000000000000000000000000000000000000000000000000000000000918590805b8a600054168b8a1690811015610e2e578b91610e19637fffffff9260019b8c841615600014610734578061070b83611b4e565b991c1698168a81146102e95760010197610de6565b5050848987898d875490601e81610e46818516611a9d565b160616809163ffffffff191617885560005260028452604060002055610e6b84611a9d565b865467ffffffff00000000191690841b67ffffffff000000001617865560008581526006845260408120805460ff1916600190811790915596905b828110610ee45787877fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e36040898982519182524290820152a2600455005b8660005260078552604060002090610efd818587611525565b6001600160a01b0390358181169081900361015857835493600160401b851015610461578461084b918d610f33970181556114fe565b610ea6565b3461015857600036600319011261015857602063ffffffff60005416604051908152f35b346101585760003660031901126101585760206040517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b60c0366003190112610158576001600160401b036004356024803583811161015857610fc79036906004016113e1565b9060443593606435610fd76113ff565b9160a435908111610158573660238201121561015857611000903690858160040135910161142c565b95611009611535565b816000526020946005865260ff604060002054166112a95761102a82611ab2565b15611265579061109090604051906110418261135f565b815283878201528660018060a01b03809616938460408401526000606084015260006080840152600060a084015260405193849163695ef6f960e01b835260e0600484015260e4830190611570565b8882019360005b6006811061124c5750508192935003816000887f0000000000000000000000000000000000000000000000000000000000000000165af19081156111915760009161122f575b50156111f25760005b86600052600786526040600020805482101561119d57908689828860008961111d611114856111409a6114fe565b959054966115b0565b519460405180998197829663c16e50ef60e01b84528a6004850152830190611570565b039460031b1c165af19182156111915761115f92611164575b50611516565b6110e6565b61118390883d8a1161118a575b61117b818361137a565b810190611558565b5089611159565b503d611171565b6040513d6000823e3d90fd5b7fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f606084868a81600052600581526040600020600160ff19825416179055604051928352820152426040820152a16001600455005b60405162461bcd60e51b8152600481018690526016818601527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b6112469150863d881161118a5761117b818361137a565b886110dd565b81518652948401948b9487945090910190600101611097565b60405162461bcd60e51b815260048101879052601c818701527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b60405162461bcd60e51b815260048101879052601f818701527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b34610158576000366003190112610158576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610158576020366003190112610158576020906004356000526005825260ff6040600020541615158152f35b60c081019081106001600160401b0382111761046157604052565b90601f801991011681019081106001600160401b0382111761046157604052565b9291926001600160401b03821161046157604051916113c4601f8201601f19166020018461137a565b829481845281830111610158578281602093846000960137010152565b9080601f83011215610158578160206113fc9335910161139b565b90565b608435906001600160a01b038216820361015857565b6001600160401b0381116104615760051b60200190565b9291909261143984611415565b91611447604051938461137a565b829480845260208094019060051b8301928284116101585780915b84831061147157505050505050565b82356001600160401b03811161015857869161149086849386016113e1565b815201920191611462565b9181601f84011215610158578235916001600160401b038311610158576020808501948460051b01011161015857565b9060406003198301126101585760043591602435906001600160401b038211610158576114fa9160040161149b565b9091565b80548210156105245760005260206000200190600090565b60001981146102e95760010190565b91908110156105245760051b0190565b600260045414611546576002600455565b604051633ee5aeb560e01b8152600490fd5b90816020910312610158575180151581036101585790565b919082519283825260005b84811061159c575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161157b565b80518210156105245760209160051b010190565b9694979395906115d9906115e193369161139b565b94369161142c565b956115ea611535565b6000968588526020956005875260409460ff868b2054166118845761160e85611ab2565b156118405760e0968651956116228761135f565b8652828987015261166f8960018060a01b0380971692838a8a01528d60608a01528d60808a01528d60a08a01528d8a5193849263695ef6f98e1b845260049d8e85015260e4840190611570565b60249a82848d015b600682106118205750505082809103918a7f0000000000000000000000000000000000000000000000000000000000000000165af1908115611816578c916117f9575b50156117be578a5b8a8c5260078a52878c208054821015611765578a88838f83908b8f8f979061171a6116fb8f93886116f2916114fe565b989054946115b0565b519951998a988997889463c16e50ef60e01b8652850152830190611570565b039460031b1c165af1801561175b5790611739929161173e5750611516565b6116c2565b611754908c8d3d1061118a5761117b818361137a565b5038611159565b89513d8f823e3d90fd5b5050945098600198508593507fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f96979192509460609583815260058352208860ff1982541617905582519384528301524290820152a155565b865162461bcd60e51b81528089018a90526016818801527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b61181091508a3d8c1161118a5761117b818361137a565b386116ba565b88513d8e823e3d90fd5b8287939650600194979295505181520193019101928f918e948694611677565b855162461bcd60e51b815260048101899052601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b855162461bcd60e51b815260048101899052601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b9190826040910312610158576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019384831015611a3357848210156119e45760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa9788156119da578697988596979389916119b8575b506044939486519889968795865208600484015260248301525afa9283156119ad579261198357505090565b6119a29250803d106119a6575b61199a818361137a565b8101906118c8565b5090565b503d611990565b9051903d90823e3d90fd5b604494506119d39150863d88116119a65761199a818361137a565b9093611957565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b8015611a975760ff81116102e9576001901b9063ffffffff82116102e957565b50600190565b90600163ffffffff809316019182116102e957565b8015611b485763ffffffff8060035416918260019384805b611ada575b505050505050600090565b15611b39575b60009084811690818352600260205260408320548514611b3057859115611b28575b168015611b1457600019019085611aca565b634e487b7160e01b82526011600452602482fd5b50601e611b02565b50505050505090565b8184821603611ae05780611acf565b50600090565b80611b7857507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b60018103611ba557507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103611bd257507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b60038103611bff57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b60048103611c2c57507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103611c5957507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103611c8657507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103611cb357507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103611ce057507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103611d0c57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a8103611d3957507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b8103611d6657507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103611d9357507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103611dc057507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103611ded57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103611e1a57507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103611e4757507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103611e7457507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103611ea157507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103611ece57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103611efb57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b60158103611f2857507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b60168103611f5557507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103611f8257507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b60188103611faf57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103611fdc57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a810361200957507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b810361203657507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c810361206257507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d810361208f57507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e81036120bc57507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f036120e7577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fdfea26469706673582212203ce06540d8e3f82434f5c5fc9d9d97b96ae6cd0a660aa57ba0f04eb434d8eb5a64736f6c63430008140033";

type EarlyAccessCodesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EarlyAccessCodesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EarlyAccessCodes__factory extends ContractFactory {
  constructor(...args: EarlyAccessCodesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      overrides || {}
    ) as Promise<
      EarlyAccessCodes & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EarlyAccessCodes__factory {
    return super.connect(runner) as EarlyAccessCodes__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EarlyAccessCodesInterface {
    return new Interface(_abi) as EarlyAccessCodesInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EarlyAccessCodes {
    return new Contract(address, _abi, runner) as unknown as EarlyAccessCodes;
  }
}

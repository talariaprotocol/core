/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Whitelist,
  WhitelistInterface,
} from "../../../../contracts/useCases/whitelist/Whitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ConsumeCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NewCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "addUserToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_commitments",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "_proofs",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
      {
        internalType: "address payable[]",
        name: "_tos",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_usersToWhitelist",
        type: "address[]",
      },
    ],
    name: "bulkConsumeEarlyAccessCodes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_commitments",
        type: "bytes32[]",
      },
      {
        internalType: "address[][]",
        name: "_validationModules",
        type: "address[][]",
      },
    ],
    name: "bulkCreateEarlyAccessCodes",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
      {
        internalType: "address",
        name: "userToWhitelist",
        type: "address",
      },
    ],
    name: "consumeEarlyAccessCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "createEarlyAccessCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "removeUserFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "setCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "usersWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validationModules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346200028957601f62002dd238819003918201601f191683019291906001600160401b038411838510176200028e578160609284926040968752833981010312620002895780516001600160a01b0390818116810362000289576020918284015193818516850362000289578501519263ffffffff9485851692838603620002895733156200027157600095865491895190339084167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08a80a3600380546001600160401b0319169055851562000223575083851015620001df576001600160c01b03199091163363ffffffff60a01b19161760a09190911b63ffffffff60a01b16178555608052835b8581168381101562000156579081620001258893620002a4565b90875260018452888720551685811462000142576001016200010b565b634e487b7160e01b85526011600452602485fd5b50509291939060001901818111620001cb576200017986939260029216620002a4565b93828052522055600160045560a0525161252f9081620008a3823960805181818161038b015281816108de01528181610a1901526110d5015260a0518181816113b30152818161160a01526122ab0152f35b634e487b7160e01b83526011600452602483fd5b885162461bcd60e51b815260048101859052601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606490fd5b62461bcd60e51b815260048101859052602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152608490fd5b8751631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b80620002cf57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b60018103620002fd57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b600281036200032b57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b600381036200035957507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200038757507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103620003b557507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103620003e357507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b600781036200041157507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b600881036200043f57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b600981036200046c57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200049a57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b8103620004c857507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103620004f657507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d81036200052457507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e81036200055257507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f81036200058057507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103620005ae57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103620005dc57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b601281036200060a57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b601381036200063857507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b601481036200066657507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200069457507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b60168103620006c257507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103620006f057507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b601881036200071e57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b601981036200074c57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a81036200077a57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b8103620007a857507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c8103620007d557507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d81036200080357507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e81036200083157507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f036200085d577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe6101e080604052600436101561001457600080fd5b60003560e01c90816317cc915c14611639575080632b7ac3f3146115f45780633af32abf14610c735780633e7fd3b41461129e578063414a37ba146112635780634ecf518b1461123c5780636c31a67d1461107d5780636d9833e31461105f578063715018a614611006578063747b805014610fa5578063838a11fd14610f53578063839df94514610f225780638da5cb5b14610ef95780638ea3099e14610ec257806390eeb02b14610e9e5780639fa12d0b14610da65780639fdc864214610d10578063ba70f75714610cde578063c2b40ae414610cb2578063c78aa3ed14610c73578063cc013d85146109c1578063cd87a3b4146109a5578063e5285dcc1461096e578063e829558814610948578063ec7329591461090d578063ed33639f146108c8578063efb68ee9146106da578063f178e47c146106ae578063f2fde38b14610620578063f8f5342414610240578063f9902bb1146101ab5763fc7e9c6f1461018057600080fd5b346101a65760003660031901126101a657602060035463ffffffff60405191831c168152f35b600080fd5b346101a65760203660031901126101a6576101c4611666565b6101cc611833565b6001600160a01b031660008181526008602052604090205460ff1615610204576000908152600860205260409020805460ff19169055005b60405162461bcd60e51b8152602060048201526014602482015273155cd95c881b9bdd081dda1a5d195b1a5cdd195960621b6044820152606490fd5b60403660031901126101a6576004356001600160401b0381116101a65761026b9036906004016117b8565b906024356001600160401b0381116101a65761028c839136906004016117b8565b929060005b83811061029a57005b6102a581858561186e565b358582101561060a5760059582871b840135601e19853603018112156101a6578401966001600160401b038835116101a6578735901b360360208801136101a6576102ee611892565b81600052600660205260ff604060002054166105bb5763ffffffff60035460201c169363ffffffff6103268160005460a01c16611ad0565b16851461055d576000958592845b63ffffffff60005460a01c1663ffffffff8a161015610402576103af637fffffff9160018716156000146103e8578061037263ffffffff8d16611ba7565b9163ffffffff8d1660005260016020526040600020555b7f0000000000000000000000000000000000000000000000000000000000000000611937565b9460011c169763ffffffff808216146103d25763ffffffff166001019793610334565b634e487b7160e01b600052601160045260246000fd5b63ffffffff8b166000526001602052604060002054610389565b9198969350965097909760035463ffffffff601e81610422818516611af6565b160616809163ffffffff191617600355600052600260205260406000205561044982611af6565b67ffffffff000000006003549160201b169067ffffffff000000001916176003558260005260066020526040600020600160ff1982541617905560005b813581106104d9575050907fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e360406104cf94938151908152426020820152a2600160045561185f565b9390929193610291565b8360005260076020526040600020906104ff6104fa8285356020870161186e565b61187e565b825492600160401b84101561054757836105219160016105429601815561181b565b819291549060031b9160018060a01b03809116831b921b191617905561185f565b610486565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b634e487b7160e01b600052603260045260246000fd5b346101a65760203660031901126101a657610639611666565b610641611833565b6001600160a01b0390811690811561069557600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b346101a65760203660031901126101a65760043560005260016020526020604060002054604051908152f35b346101a65760e03660031901126101a6576004356001600160401b0381116101a65761070a9036906004016117b8565b610140526024356001600160401b0381116101a65761072d9036906004016117b8565b91906044356001600160401b0381116101a65761074e9036906004016117b8565b610100526101a0526064356001600160401b0381116101a6576107759036906004016117b8565b61012052610180526084356001600160401b0381116101a65761079c9036906004016117b8565b60805260c0526001600160401b0360a435116101a6576107c13660a4356004016117b8565b60e05260a05260c4356001600160401b0381116101a6576107e69036906004016117b8565b6101c0526101605260005b61014051808210156108c65781610808918561186e565b35908481101561060a578060051b830135601e19843603018112156101a65783016001600160401b038135116101a6578035360360208201136101a65761085682610100516101a05161186e565b3561086883610120516101805161186e565b35916108798460805160c05161186e565b35946001600160a01b03861686036101a6576108c1956108bc946108a76104fa886101c0516101605161186e565b9460e0519460a05194602082359201906121c7565b61185f565b6107f1565b005b346101a65760003660031901126101a6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101a65760003660031901126101a65760206040517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b346101a65760203660031901126101a6576020610966600435611ba7565b604051908152f35b346101a65760203660031901126101a657602061099b600435600052600560205260ff6040600020541690565b6040519015158152f35b346101a65760003660031901126101a6576020604051601e8152f35b6109ca366117e8565b916109d3611892565b806000526020906006825260ff60406000205416610c245763ffffffff93600392858454821c169486610a0c8160005460a01c16611ad0565b168614610bc657946000947f0000000000000000000000000000000000000000000000000000000000000000918590805b8a60005460a01c168b8a1690811015610aae578b91610a87637fffffff9260019b8c841615600014610a9c5780610a7383611ba7565b926000528d8c526040600020555b89611937565b991c1698168a81146103d25760010197610a3d565b906000528b8a52604060002054610a81565b5050848987898d875490601e81610ac6818516611af6565b160616809163ffffffff191617885560005260028452604060002055610aeb84611af6565b865467ffffffff00000000191690841b67ffffffff000000001617865560008581526006845260408120805460ff1916600190811790915596905b828110610b645787877fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e36040898982519182524290820152a2600455005b8660005260078552604060002090610b806104fa82868861186e565b825492600160401b8410156105475783610ba1918c610bc19601815561181b565b8192915490861b9160018060a01b03809116831b921b191617905561185f565b610b26565b60405162461bcd60e51b815260048101839052603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b815260048101839052602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b346101a65760203660031901126101a6576001600160a01b03610c94611666565b166000526008602052602060ff604060002054166040519015158152f35b346101a65760203660031901126101a65760043560005260026020526020604060002054604051908152f35b346101a65760003660031901126101a65763ffffffff6003541660005260026020526020604060002054604051908152f35b346101a65760e03660031901126101a6576024356001600160401b038082116101a657366023830112156101a6578160040135908082116101a65736602483850101116101a657610d5f61171c565b9060a4359081116101a657610d789036906004016117b8565b60c435939092906001600160a01b03851685036101a6576108c69560643591602460443592016004356121c7565b346101a6576020806003193601126101a6576004356001600160401b0381116101a657610dd79036906004016117b8565b90610de182611732565b90610def6040519283611697565b828252610dfb83611732565b8285019390601f190136853760005b818110610e575750505090604051928392818401908285525180915260408401929160005b828110610e3e57505050500390f35b8351151585528695509381019392810192600101610e2f565b80610e7e610e69610e8793858761186e565b35600052600560205260ff6040600020541690565b610e8c5761185f565b610e0a565b6001610e98828761190d565b5261185f565b346101a65760003660031901126101a657602063ffffffff60035416604051908152f35b346101a65760603660031901126101a6576004356001600160a01b03811681036101a6576109666020916044359060243590611937565b346101a65760003660031901126101a6576000546040516001600160a01b039091168152602090f35b346101a65760203660031901126101a6576004356000526006602052602060ff604060002054166040519015158152f35b346101a65760403660031901126101a6576024356004356000526007602052604060002080548210156101a657602091610f8c9161181b565b905460405160039290921b1c6001600160a01b03168152f35b346101a65760203660031901126101a657610fbe611666565b610fc6611833565b6001600160a01b0316600081815260086020526040902054610feb9060ff161561217b565b6000908152600860205260409020805460ff19166001179055005b346101a65760003660031901126101a65761101f611833565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101a65760203660031901126101a657602061099b600435611b0b565b611086366117e8565b9161108f611892565b806000526020906006825260ff60406000205416610c245763ffffffff93600392858454821c1694866110c88160005460a01c16611ad0565b168614610bc657946000947f0000000000000000000000000000000000000000000000000000000000000000918590805b8a60005460a01c168b8a1690811015611144578b9161112f637fffffff9260019b8c841615600014610a9c5780610a7383611ba7565b991c1698168a81146103d257600101976110f9565b5050848987898d875490601e8161115c818516611af6565b160616809163ffffffff19161788556000526002845260406000205561118184611af6565b865467ffffffff00000000191690841b67ffffffff000000001617865560008581526006845260408120805460ff1916600190811790915596905b8281106111fa5787877fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e36040898982519182524290820152a2600455005b86600052600785526040600020906112166104fa82868861186e565b825492600160401b8410156105475783610ba1918c6112379601815561181b565b6111bc565b346101a65760003660031901126101a657602063ffffffff60005460a01c16604051908152f35b346101a65760003660031901126101a65760206040517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b60c03660031901126101a6576001600160401b03600435602480358381116101a6576112ce9036906004016116fe565b90604435936064356112de61171c565b9160a4359081116101a657366023820112156101a6576113079036908581600401359101611749565b95611310611892565b816000526020946005865260ff604060002054166115b05761133182611b0b565b1561156c579061139790604051906113488261167c565b815283878201528660018060a01b03809616938460408401526000606084015260006080840152600060a084015260405193849163695ef6f960e01b835260e0600484015260e48301906118cd565b8882019360005b600681106115535750508192935003816000887f0000000000000000000000000000000000000000000000000000000000000000165af190811561149857600091611536575b50156114f95760005b8660005260078652604060002080548210156114a457908689828860008961142461141b856114479a61181b565b9590549661190d565b519460405180998197829663c16e50ef60e01b84528a60048501528301906118cd565b039460031b1c165af1918215611498576114669261146b575b5061185f565b6113ed565b61148a90883d8a11611491575b6114828183611697565b8101906118b5565b5089611460565b503d611478565b6040513d6000823e3d90fd5b7fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f606084868a81600052600581526040600020600160ff19825416179055604051928352820152426040820152a16001600455005b60405162461bcd60e51b8152600481018690526016818601527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b61154d9150863d8811611491576114828183611697565b886113e4565b81518652948401948b948794509091019060010161139e565b60405162461bcd60e51b815260048101879052601c818701527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b60405162461bcd60e51b815260048101879052601f818701527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b346101a65760003660031901126101a6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101a65760203660031901126101a6576020906004356000526005825260ff6040600020541615158152f35b600435906001600160a01b03821682036101a657565b60c081019081106001600160401b0382111761054757604052565b90601f801991011681019081106001600160401b0382111761054757604052565b9291926001600160401b03821161054757604051916116e1601f8201601f191660200184611697565b8294818452818301116101a6578281602093846000960137010152565b9080601f830112156101a657816020611719933591016116b8565b90565b608435906001600160a01b03821682036101a657565b6001600160401b0381116105475760051b60200190565b9291909261175684611732565b916117646040519384611697565b829480845260208094019060051b8301928284116101a65780915b84831061178e57505050505050565b82356001600160401b0381116101a65786916117ad86849386016116fe565b81520192019161177f565b9181601f840112156101a6578235916001600160401b0383116101a6576020808501948460051b0101116101a657565b9060406003198301126101a65760043591602435906001600160401b0382116101a657611817916004016117b8565b9091565b805482101561060a5760005260206000200190600090565b6000546001600160a01b0316330361184757565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146103d25760010190565b919081101561060a5760051b0190565b356001600160a01b03811681036101a65790565b6002600454146118a3576002600455565b604051633ee5aeb560e01b8152600490fd5b908160209103126101a6575180151581036101a65790565b919082519283825260005b8481106118f9575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016118d8565b805182101561060a5760209160051b010190565b91908260409103126101a6576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019384831015611a8c5784821015611a3d5760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa978815611a3357869798859697938991611a11575b506044939486519889968795865208600484015260248301525afa928315611a0657926119dc57505090565b6119fb9250803d106119ff575b6119f38183611697565b810190611921565b5090565b503d6119e9565b9051903d90823e3d90fd5b60449450611a2c9150863d88116119ff576119f38183611697565b90936119b0565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b8015611af05760ff81116103d2576001901b9063ffffffff82116103d257565b50600190565b90600163ffffffff809316019182116103d257565b8015611ba15763ffffffff8060035416918260019384805b611b33575b505050505050600090565b15611b92575b60009084811690818352600260205260408320548514611b8957859115611b81575b168015611b6d57600019019085611b23565b634e487b7160e01b82526011600452602482fd5b50601e611b5b565b50505050505090565b8184821603611b395780611b28565b50600090565b80611bd157507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b60018103611bfe57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103611c2b57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b60038103611c5857507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b60048103611c8557507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103611cb257507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103611cdf57507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103611d0c57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103611d3957507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103611d6557507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a8103611d9257507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b8103611dbf57507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103611dec57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103611e1957507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103611e4657507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103611e7357507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103611ea057507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103611ecd57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103611efa57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103611f2757507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103611f5457507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b60158103611f8157507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b60168103611fae57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103611fdb57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b6018810361200857507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b6019810361203557507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a810361206257507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b810361208f57507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036120bb57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d81036120e857507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e810361211557507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03612140577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fd5b1561218257565b60405162461bcd60e51b815260206004820152601860248201527f5573657220616c72656164792077686974656c697374656400000000000000006044820152606490fd5b97939195600897959399919961221360018060a01b038097169261220b60009d8e9b868d5260209d8e5261220460ff60409e8f902054161561217b565b36916116b8565b983691611749565b9461221c611892565b848c5260058a5260ff898d2054166124b55761223782611b0b565b15612471578960e0988d89612291948d51966122528861167c565b875289858801521694858d8201528160608201528160808201528160a08201528c5194859363695ef6f98e1b855260049d8e86015260e48501906118cd565b9082602485015b600682106124515750505082809103918b7f0000000000000000000000000000000000000000000000000000000000000000165af1908115612447578c9161242a575b50156123ee578a5b8a8c5260078a52888c208054821015612384578a8a838f83908c8c8f61231861230f876123399b61181b565b9790549361190d565b5196519889978896879363c16e50ef60e01b855284015260248301906118cd565b039460031b1c165af1801561237a5790612358929161235d575061185f565b6122e3565b612373908c8d3d10611491576114828183611697565b5038611460565b8a513d8f823e3d90fd5b505060019950600895508998945060607fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f918a949c989395808a52600588528a8a2060ff199d8e8254161790558a5191825287820152428a820152a1558352522091825416179055565b875162461bcd60e51b81528088018a9052601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b61244191508a3d8c11611491576114828183611697565b386122db565b89513d8e823e3d90fd5b8287939650600194979295505181520193019101928f918e948694612298565b885162461bcd60e51b8152600481018b9052601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b885162461bcd60e51b8152600481018b9052601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fdfea2646970667358221220efd7dfc19fff0e0e558d12fbae3de9e77032c0faf7536c70c0d698cbb380607e64736f6c63430008140033";

type WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Whitelist__factory extends ContractFactory {
  constructor(...args: WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      overrides || {}
    ) as Promise<
      Whitelist & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Whitelist__factory {
    return super.connect(runner) as Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistInterface {
    return new Interface(_abi) as WhitelistInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Whitelist {
    return new Contract(address, _abi, runner) as unknown as Whitelist;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TalariaProtocol,
  TalariaProtocolInterface,
} from "../../../contracts/TalariaProtocol.sol/TalariaProtocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ConsumeCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NewCode",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "setCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validationModules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346200020657601f62001ef238819003918201601f191683019291906001600160401b038411838510176200020b578160609284926040968752833981010312620002065780516001600160a01b039081811681036200020657602092838101519283168303620002065784015163ffffffff938482168092036200020657600380546001600160401b03191690558115620001b7578082101562000174576000938263ffffffff19865416178555608052835b8581168381101562000100579081620000cf889362000221565b908752600184528887205516858114620000ec57600101620000b5565b634e487b7160e01b85526011600452602485fd5b505092919390600019018181116200016057620001238693926002921662000221565b93828052522055600160045560a052516116d2908162000820823960805181818161017501526102e2015260a0518181816109780152610c1a0152f35b634e487b7160e01b83526011600452602483fd5b60649086519062461bcd60e51b82526004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152fd5b60849086519062461bcd60e51b82526004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b806200024c57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b600181036200027a57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103620002a857507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b60038103620002d657507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200030457507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036200033257507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b600681036200036057507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b600781036200038e57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103620003bc57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103620003e957507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200041757507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036200044557507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c81036200047357507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103620004a157507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103620004cf57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103620004fd57507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b601081036200052b57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036200055957507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b601281036200058757507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103620005b557507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103620005e357507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200061157507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b601681036200063f57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b601781036200066d57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b601881036200069b57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103620006c957507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a8103620006f757507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036200072557507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036200075257507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d81036200078057507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103620007ae57507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03620007da577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826317cc915c14610c49575081632b7ac3f314610c055781633e7fd3b414610830578163414a37ba146107f55781634ecf518b146107d25781636d9833e3146107b2578163838a11fd14610764578163839df945146107375781638ea3099e146106fe57816390eeb02b146106d95781639fa12d0b146105d7578163ba70f757146105a9578163c2b40ae414610581578163cc013d851461025d578163cd87a3b414610241578163e5285dcc14610209578163e8295588146101df578163ec732959146101a4578163ed33639f14610160578163f178e47c14610134575063fc7e9c6f1461010c57600080fd5b346101305781600319360112610130576003549051602091821c63ffffffff168152f35b5080fd5b90503461015c57602036600319011261015c5760209282913581526001845220549051908152f35b8280fd5b505034610130578160031936011261013057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610130578160031936011261013057602090517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b82843461020657602036600319011261020657506101ff602092356110c8565b9051908152f35b80fd5b828434610206576020366003190112610206575061023860209235600052600560205260ff6040600020541690565b90519015158152f35b50503461013057816003193601126101305760209051601e8152f35b828481600319360112610206576024928035843567ffffffffffffffff811161057d5761028d9036908401610d4d565b610298929192610db3565b8185526020906006825260ff87872054166105315763ffffffff96600394888654851c1694896102ca818b5416610ff1565b1686146104d65790919294889495819783988c889a817f00000000000000000000000000000000000000000000000000000000000000009a5b5416918c169182101561039557889796959493928f928f9a908d637fffffff9461034e9360019e8f80881615600014610386578394610341876110c8565b9683525220555b8d610e58565b991c169a168d81146103745760010199959694959394929391929091908d90818e610303565b634e487b7160e01b8d5260118c528e8dfd5b91939092948352522054610348565b9499985050509298999b939a90949750825490601e816103b6818516611017565b160616809163ffffffff19161783558b5260028552868b20556103d885611017565b815467ffffffff00000000191690851b67ffffffff0000000016178155868a5260068452858a20805460ff19166001908117909155988a5b84811061044f5750505050509082917fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e393519182524290820152a25580f35b888c5260078652878c20610464828785610da3565b6001600160a01b0391903582811691908290036104d257805490680100000000000000008210156104bf578e820181556104ba949392916104a491610d1f565b9092835491881b92831b921b1916179055610d7e565b610410565b50634e487b7160e01b8f5260418d52868ffd5b8e80fd5b825162461bcd60e51b81528089018690526030818d01527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b865162461bcd60e51b81528086018390526021818a01527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b8380fd5b90503461015c57602036600319011261015c5760209282913581526002845220549051908152f35b5050346101305781600319360112610130578060209263ffffffff6003541681526002845220549051908152f35b90508234610206576020918260031936011261013057803567ffffffffffffffff811161015c5784929161060d91369101610d4d565b919061061883610d07565b9061062585519283610c73565b83825261063184610d07565b8287019490601f1901368637835b8181106106865750505083519485948186019282875251809352850193925b82811061066d57505050500390f35b835115158552869550938101939281019260010161065e565b806106b361069e6106bc9385879c99989a9b9c610da3565b35600052600560205260ff6040600020541690565b6106c757610d7e565b96959492939661063f565b60016106d38289610e2e565b52610d7e565b50503461013057816003193601126101305760209063ffffffff600354169051908152f35b90503461015c57606036600319011261015c5735916001600160a01b038316830361020657506101ff6020926044359060243590610e58565b90503461015c57602036600319011261015c578160209360ff923581526006855220541690519015158152f35b828434610206578160031936011261020657602435923581526007602052818120908154841015610206575060209261079c91610d1f565b905491519160018060a01b039160031b1c168152f35b82843461020657602036600319011261020657506102386020923561102c565b50503461013057816003193601126101305763ffffffff60209254169051908152f35b505034610130578160031936011261013057602090517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b905060c036600319011261015c5760249081359267ffffffffffffffff93848111610c01576108629036908401610cab565b6001600160a01b0360843581811696604435969390916064359190899003610bfd5760a43592808411610bf95736602385011215610bf95783880135986108a88a610d07565b946108b589519687610c73565b8a865260209a888c88019160051b830101913683116104d257898101915b838310610bce57505050506108e6610db3565b838c5260058a5260ff888d205416610b8c576109018161102c565b15610b4a5787519160c0830190811183821017610b3857928a9161095e948a52835284828401528b898401528c60608401528c60808401528c60a0840152885193849163695ef6f960e01b835260e08c84015260e4830190610dee565b818901938e5b60068110610b1f5750508192935003818d887f0000000000000000000000000000000000000000000000000000000000000000165af1908115610b15578a91610af8575b5015610abd579088929183988735995b8a865260078a528786208054821015610a6b578a8883828a8a8f8f9790610a0f6109f06109e78f948990610d1f565b98905494610e2e565b519951998a988997889463c16e50ef60e01b8652850152830190610dee565b039460031b1c165af18015610a615790610a2f9291610a34575b50610d7e565b6109b8565b610a53908c8d3d10610a5a575b610a4b8183610c73565b810190610dd6565b5038610a29565b503d610a41565b89513d89823e3d90fd5b8660018b7fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f60608f8e8a8a92818952600581528289208860ff1982541617905582519384528301524290820152a15580f35b505050606493601692519362461bcd60e51b85528401528201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152fd5b610b0f9150883d8a11610a5a57610a4b8183610c73565b386109a8565b86513d8c823e3d90fd5b81518652948401948d9487945090910190600101610964565b634e487b7160e01b8d5260418a52878dfd5b875162461bcd60e51b8152808a018b9052601c818901527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b875162461bcd60e51b8152808a018b9052601f818901527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b8235868111610bf4578e91610be983928e3691870101610cab565b8152019201916108d3565b508f80fd5b8a80fd5b8980fd5b8580fd5b505034610130578160031936011261013057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9291503461057d57602036600319011261057d573583526005602090815292205460ff1615158152f35b90601f8019910116810190811067ffffffffffffffff821117610c9557604052565b634e487b7160e01b600052604160045260246000fd5b81601f82011215610d025780359067ffffffffffffffff8211610c955760405192610ce0601f8401601f191660200185610c73565b82845260208383010111610d0257816000926020809301838601378301015290565b600080fd5b67ffffffffffffffff8111610c955760051b60200190565b8054821015610d375760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9181601f84011215610d025782359167ffffffffffffffff8311610d02576020808501948460051b010111610d0257565b6000198114610d8d5760010190565b634e487b7160e01b600052601160045260246000fd5b9190811015610d375760051b0190565b600260045414610dc4576002600455565b604051633ee5aeb560e01b8152600490fd5b90816020910312610d0257518015158103610d025790565b919082519283825260005b848110610e1a575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610df9565b8051821015610d375760209160051b010190565b9190826040910312610d02576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019384831015610fad5784821015610f5e5760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa978815610f5457869798859697938991610f32575b506044939486519889968795865208600484015260248301525afa928315610f275792610efd57505090565b610f1c9250803d10610f20575b610f148183610c73565b810190610e42565b5090565b503d610f0a565b9051903d90823e3d90fd5b60449450610f4d9150863d8811610f2057610f148183610c73565b9093610ed1565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b80156110115760ff8111610d8d576001901b9063ffffffff8211610d8d57565b50600190565b90600163ffffffff80931601918211610d8d57565b80156110c25763ffffffff8060035416918260019384805b611054575b505050505050600090565b156110b3575b600090848116908183526002602052604083205485146110aa578591156110a2575b16801561108e57600019019085611044565b634e487b7160e01b82526011600452602482fd5b50601e61107c565b50505050505090565b818482160361105a5780611049565b50600090565b806110f257507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b6001810361111f57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b6002810361114c57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b6003810361117957507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036111a657507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036111d357507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b6006810361120057507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b6007810361122d57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b6008810361125a57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b6009810361128657507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036112b357507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036112e057507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c810361130d57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d810361133a57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e810361136757507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f810361139457507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b601081036113c157507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036113ee57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b6012810361141b57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b6013810361144857507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b6014810361147557507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036114a257507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b601681036114cf57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b601781036114fc57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b6018810361152957507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b6019810361155657507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a810361158357507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036115b057507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036115dc57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d810361160957507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e810361163657507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03611661577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fdfea26469706673582212203d02602ff0ce574195e50b20248860878cbc908e2030ebb7a77ae77004af611064736f6c63430008140033";

type TalariaProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TalariaProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TalariaProtocol__factory extends ContractFactory {
  constructor(...args: TalariaProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      overrides || {}
    ) as Promise<
      TalariaProtocol & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TalariaProtocol__factory {
    return super.connect(runner) as TalariaProtocol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TalariaProtocolInterface {
    return new Interface(_abi) as TalariaProtocolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TalariaProtocol {
    return new Contract(address, _abi, runner) as unknown as TalariaProtocol;
  }
}

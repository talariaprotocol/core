/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC721Transfer,
  ERC721TransferInterface,
} from "../../contracts/ERC721Transfer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "contract IERC721",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ConsumeCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NewCode",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "TransferId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "createTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "setCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validationModules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346200023957601f6200260a38819003918201601f1916830191906001600160401b038311848410176200023e578160809285926040958652833981010312620002395781516001600160a01b0380821682036200023957602092838501519382851685036200023957818601519263ffffffff968785168095036200023957606001519081168091036200023957600380546001600160401b03191690558315620001ea5781841015620001a7576000958463ffffffff19885416178755608052855b8781168581101562000110579081620000df8a9362000254565b908952600185528589205516878114620000fc57600101620000c5565b634e487b7160e01b87526011600452602487fd5b50509491959092600019018181116200019357620001348793926002921662000254565b82805293522055600160045560a052600880546001600160a01b03191691909117905551611db790816200085382396080518181816101c50152818161032c01526108d5015260a051818181610d32015281816110e0015261120f0152f35b634e487b7160e01b83526011600452602483fd5b50606491519062461bcd60e51b82526004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152fd5b50608491519062461bcd60e51b82526004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b806200027f57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b60018103620002ad57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103620002db57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b600381036200030957507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200033757507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036200036557507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b600681036200039357507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103620003c157507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103620003ef57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b600981036200041c57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200044a57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036200047857507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103620004a657507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103620004d457507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e81036200050257507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f81036200053057507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b601081036200055e57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036200058c57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103620005ba57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103620005e857507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b601481036200061657507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200064457507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b601681036200067257507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103620006a057507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b60188103620006ce57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103620006fc57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a81036200072a57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036200075857507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036200078557507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d8103620007b357507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103620007e157507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f036200080d577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe60a080604052600436101561001357600080fd5b600090813560e01c90816317cc915c14611268575080632469ab921461123e5780632b7ac3f3146111f95780633e7fd3b41461101c578063414a37ba14610fe15780634488e59514610bfd5780634ecf518b14610bda5780636d9833e314610bbb5780637835a0c914610805578063838a11fd146107b2578063839df945146107835780638ea3099e1461074c57806390eeb02b146107285780639fa12d0b14610623578063ba70f757146105f4578063c2b40ae4146105ca578063cc013d85146102aa578063cd87a3b41461028e578063e5285dcc14610256578063e82955881461022f578063ec732959146101f4578063ed33639f146101af578063f178e47c14610185578063fc0c546a1461015c5763fc7e9c6f1461013457600080fd5b34610159578060031936011261015957602060035463ffffffff60405191831c168152f35b80fd5b50346101595780600319360112610159576008546040516001600160a01b039091168152602090f35b50346101595760203660031901126101595760406020916004358152600183522054604051908152f35b50346101595780600319360112610159576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461015957806003193601126101595760206040517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b503461015957602036600319011261015957602061024e6004356117ad565b604051908152f35b5034610159576020366003190112610159576020610284600435600052600560205260ff6040600020541690565b6040519015158152f35b50346101595780600319360112610159576020604051601e8152f35b50604036600319011261015957600435602491823567ffffffffffffffff81116105c6576102dc903690600401611404565b906102e5611498565b8383526020936006855260ff6040852054166105785763ffffffff94600390868254821c169487610318818954166116d6565b16861461051b5794909192938194809288967f0000000000000000000000000000000000000000000000000000000000000000945b8b8b5416908c8a16918210156103de5787969594939261039c8e938e9b9a637fffffff9460019d8e808716156000146103cb5790604091839461038f876117ad565b9683525220555b8961153d565b991c1698168b81146103b857600101979091929394959661034d565b634e487b7160e01b8b5260116004528c8bfd5b5090926040925081528d8c522054610396565b929793985050508a9297935089825490601e816103fc8185166116fc565b160616809163ffffffff1916178355895260028552604089205561041f856116fc565b815467ffffffff00000000191690851b67ffffffff00000000161781558588526006845260408820805460ff1916600190811790915596885b848110610498578989897fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e360408b8b82519182524290820152a260045580f35b878a526007865260408a206104ae828785611488565b6001600160a01b03919035828116919082900361051757805490600160401b82101561050457816104e9918e6104ff97969594018155611435565b9092835491881b92831b921b1916179055611463565b610458565b634e487b7160e01b8e526041600452878efd5b8c80fd5b60405162461bcd60e51b8152600481018390526030818b01527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b8152600481018690526021818801527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b5080fd5b50346101595760203660031901126101595760406020916004358152600283522054604051908152f35b5034610159578060031936011261015957604060209163ffffffff600354168152600283522054604051908152f35b5034610159576020806003193601126105c65760043567ffffffffffffffff811161072457610656903690600401611404565b90926106618261137c565b9361066f60405195866112da565b82855261067b8361137c565b8585019390601f1901368537825b8181106106d35750505060405193838594850191818652518092526040850193925b8281106106ba57505050500390f35b83511515855286955093810193928101926001016106ab565b806106ff6106ea6107089385879b999a989b611488565b35600052600560205260ff6040600020541690565b61071257611463565b9592949395610689565b600161071e8288611513565b52611463565b8280fd5b5034610159578060031936011261015957602063ffffffff60035416604051908152f35b503461015957606036600319011261015957600435906001600160a01b038216820361015957602061024e6044356024358561153d565b50346101595760203660031901126101595760ff60406020926004358152600684522054166040519015158152f35b5034610159576040366003190112610159576024359060043581526007602052604081209081548310156101595760206107ec8484611435565b905460405160039290921b1c6001600160a01b03168152f35b50606036600319011261015957602460805260243567ffffffffffffffff81116105c657610837903690600401611404565b9190610841611498565b6004358252600660205260ff604083205416610b6c5763ffffffff60035460201c1663ffffffff610874818554166116d6565b168114610b0e57829160043591805b63ffffffff86541663ffffffff8616101561094557637fffffff906108f96001958683161560001461092e57806108bf63ffffffff8a166117ad565b9163ffffffff8a168b528860205260408b20555b7f000000000000000000000000000000000000000000000000000000000000000061153d565b941c169363ffffffff808216146109195763ffffffff1660010193610883565b634e487b7160e01b8652601160045260805186fd5b63ffffffff881689528660205260408920546108d3565b5085859360035463ffffffff601e8161095f8185166116fc565b160616809163ffffffff191617600355855260026020526040852055610984826116fc565b67ffffffff000000006003549160201b169067ffffffff000000001916176003556004358452600660205260408420926001938460ff19825416179055845b828110610a89575050506040519081524260208201527fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e3604060043592a260045560085481906001600160a01b0316803b15610a8657818091606460405180948193632142170760e11b83523360048401523060805184015260443560448401525af18015610a7b57610a67575b5060043581526009602052604435604082205580f35b610a70906112c6565b610159578082610a51565b6040513d84823e3d90fd5b50fd5b600435865260076020526040862090610aa3818585611488565b6001600160a01b03903581811690819003610b0a57835493600160401b851015610af55784610ad9918a610af097018155611435565b909283549160031b92831b921b1916179055611463565b6109c3565b634e487b7160e01b8a5260416004526080518afd5b8880fd5b608460405162461bcd60e51b81526020600482015260306080518201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152fd5b608460405162461bcd60e51b81526020600482015260216080518201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152fd5b5034610159576020366003190112610159576020610284600435611711565b503461015957806003193601126101595763ffffffff6020915416604051908152f35b50346101595760c036600319011261015957600435602480359067ffffffffffffffff90818311610fdd5736602384011215610fdd578260040135828111610fd95736828286010111610fd9576044359260643590610c5a611366565b9260a435918211610b0a57610c85610c79610c8d933690600401611404565b989092873692016112fc565b963691611394565b93610c96611498565b8188526020956005875260ff60408a205416610f9557610cb582611711565b15610f515790610d189060405190610ccc82611294565b815283888201528760018060a01b03809616938460408401528b60608401528b60808401528b60a084015260405193849163695ef6f960e01b835260e0600484015260e48301906114d3565b888201938d5b60068110610f385750508192935003818c887f0000000000000000000000000000000000000000000000000000000000000000165af1908115610f2d578991610f10575b5015610ed35790879291835b88855260078852604085208054821015610e215790888882898989610da2610d9985610dc59a611435565b95905496611513565b519460405180998197829663c16e50ef60e01b84528a60048501528301906114d3565b039460031b1c165af1918215610e1657610de492610de9575b50611463565b610d6e565b610e08908a3d8c11610e0f575b610e0081836112da565b8101906114bb565b5038610dde565b503d610df6565b6040513d88823e3d90fd5b5050846009888a7fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f606089978089526005855260408920600160ff198254161790556040519088825285820152426040820152a160016004558552526040832054936008541690813b15610ecf57836064926040519687958694632142170760e11b865230600487015285015260448401525af18015610a7b57610ec3575080f35b610ecc906112c6565b80f35b8380fd5b60405162461bcd60e51b8152600481018790526016818601527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b610f279150873d8911610e0f57610e0081836112da565b38610d62565b6040513d8b823e3d90fd5b81518652948401948c9487945090910190600101610d1e565b60405162461bcd60e51b815260048101889052601c818701527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b60405162461bcd60e51b815260048101889052601f818701527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b8580fd5b8480fd5b503461015957806003193601126101595760206040517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b5060c036600319011261015957600435602467ffffffffffffffff8135818111610fdd5761104e903690600401611348565b916044359160643561105e611366565b9160a4359081116111f557366023820112156111f5576110879036908581600401359101611394565b93611090611498565b8188526020956005875260ff60408a205416610f95576110af82611711565b15610f5157906110c69060405190610ccc82611294565b888201938d5b600681106111dc5750508192935003818c887f0000000000000000000000000000000000000000000000000000000000000000165af1908115610f2d5789916111bf575b5015610ed35790879291835b8885526007885260408520805482101561116a5790888882898989610da2610d99856111479a611435565b039460031b1c165af1918215610e165761116592610de95750611463565b61111c565b857fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f606085878d8186526005815260408620600160ff19825416179055604051928352820152426040820152a1600160045580f35b6111d69150873d8911610e0f57610e0081836112da565b38611110565b81518652948401948c94879450909101906001016110cc565b8780fd5b50346101595780600319360112610159576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101595760203660031901126101595760406020916004358152600983522054604051908152f35b9050346105c65760203660031901126105c65760ff604060209360043581526005855220541615158152f35b60c0810190811067ffffffffffffffff8211176112b057604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116112b057604052565b90601f8019910116810190811067ffffffffffffffff8211176112b057604052565b92919267ffffffffffffffff82116112b05760405191611326601f8201601f1916602001846112da565b829481845281830111611343578281602093846000960137010152565b600080fd5b9080601f8301121561134357816020611363933591016112fc565b90565b608435906001600160a01b038216820361134357565b67ffffffffffffffff81116112b05760051b60200190565b929190926113a18461137c565b916113af60405193846112da565b829480845260208094019060051b8301928284116113435780915b8483106113d957505050505050565b823567ffffffffffffffff81116113435786916113f98684938601611348565b8152019201916113ca565b9181601f840112156113435782359167ffffffffffffffff8311611343576020808501948460051b01011161134357565b805482101561144d5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60001981146114725760010190565b634e487b7160e01b600052601160045260246000fd5b919081101561144d5760051b0190565b6002600454146114a9576002600455565b604051633ee5aeb560e01b8152600490fd5b90816020910312611343575180151581036113435790565b919082519283825260005b8481106114ff575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016114de565b805182101561144d5760209160051b010190565b9190826040910312611343576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001938483101561169257848210156116435760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa97881561163957869798859697938991611617575b506044939486519889968795865208600484015260248301525afa92831561160c57926115e257505090565b6116019250803d10611605575b6115f981836112da565b810190611527565b5090565b503d6115ef565b9051903d90823e3d90fd5b604494506116329150863d8811611605576115f981836112da565b90936115b6565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b80156116f65760ff8111611472576001901b9063ffffffff821161147257565b50600190565b90600163ffffffff8093160191821161147257565b80156117a75763ffffffff8060035416918260019384805b611739575b505050505050600090565b15611798575b6000908481169081835260026020526040832054851461178f57859115611787575b16801561177357600019019085611729565b634e487b7160e01b82526011600452602482fd5b50601e611761565b50505050505090565b818482160361173f578061172e565b50600090565b806117d757507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b6001810361180457507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b6002810361183157507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b6003810361185e57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b6004810361188b57507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036118b857507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b600681036118e557507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b6007810361191257507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b6008810361193f57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b6009810361196b57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a810361199857507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036119c557507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c81036119f257507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103611a1f57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103611a4c57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103611a7957507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103611aa657507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103611ad357507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103611b0057507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103611b2d57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103611b5a57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b60158103611b8757507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b60168103611bb457507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103611be157507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b60188103611c0e57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103611c3b57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a8103611c6857507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b8103611c9557507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c8103611cc157507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d8103611cee57507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103611d1b57507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03611d46577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fdfea26469706673582212201364564896cfbd600d03c2eaca35b8cc3667363dbfb76214a276268df4843e7064736f6c63430008140033";

type ERC721TransferConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721TransferConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Transfer__factory extends ContractFactory {
  constructor(...args: ERC721TransferConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      _token,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      _token,
      overrides || {}
    ) as Promise<
      ERC721Transfer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721Transfer__factory {
    return super.connect(runner) as ERC721Transfer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721TransferInterface {
    return new Interface(_abi) as ERC721TransferInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC721Transfer {
    return new Contract(address, _abi, runner) as unknown as ERC721Transfer;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC20Transfer,
  ERC20TransferInterface,
} from "../../contracts/ERC20Transfer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ConsumeCode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NewCode",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "TransferValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_validationsArgs",
        type: "bytes[]",
      },
    ],
    name: "consumeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "createTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_validationModules",
        type: "address[]",
      },
    ],
    name: "setCode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validationModules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346200023957601f6200279538819003918201601f1916830191906001600160401b038311848410176200023e578160809285926040958652833981010312620002395781516001600160a01b0380821682036200023957602092838501519382851685036200023957818601519263ffffffff968785168095036200023957606001519081168091036200023957600380546001600160401b03191690558315620001ea5781841015620001a7576000958463ffffffff19885416178755608052855b8781168581101562000110579081620000df8a9362000254565b908952600185528589205516878114620000fc57600101620000c5565b634e487b7160e01b87526011600452602487fd5b50509491959092600019018181116200019357620001348793926002921662000254565b82805293522055600160045560a052600880546001600160a01b03191691909117905551611f4290816200085382396080518181816101da0152818161034701526110f1015260a0518181816109de01528181610ded01526113d60152f35b634e487b7160e01b83526011600452602483fd5b50606491519062461bcd60e51b82526004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152fd5b50608491519062461bcd60e51b82526004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b6064820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b806200027f57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b60018103620002ad57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b60028103620002db57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b600381036200030957507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b600481036200033757507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b600581036200036557507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b600681036200039357507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103620003c157507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103620003ef57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b600981036200041c57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a81036200044a57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b81036200047857507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103620004a657507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103620004d457507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e81036200050257507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f81036200053057507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b601081036200055e57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b601181036200058c57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103620005ba57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103620005e857507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b601481036200061657507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b601581036200064457507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b601681036200067257507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103620006a057507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b60188103620006ce57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103620006fc57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a81036200072a57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b81036200075857507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c81036200078557507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d8103620007b357507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103620007e157507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f036200080d577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606490fdfe60e080604052600436101561001357600080fd5b60008060a052803560e01c91826317cc915c1461140557505080632b7ac3f3146113be578063323020e5146110155780633e7fd3b414610cce578063414a37ba14610c915780634488e5951461089b5780634ecf518b146108765780636d9833e314610858578063838a11fd14610802578063839df945146107cf5780638ea3099e1461079857806390eeb02b146107725780639fa12d0b14610677578063ba70f75714610643578063c2b40ae414610615578063c345cc4f146105e7578063cc013d85146102c1578063cd87a3b4146102a3578063e5285dcc1461026c578063e829558814610246578063ec73295914610209578063ed33639f146101c2578063f178e47c14610194578063fc0c546a146101695763fc7e9c6f1461013857600080fd5b346101635760a0518060031936011261016057602060035463ffffffff60405191831c168152f35b80fd5b60a05180fd5b346101635760a05180600319360112610160576008546040516001600160a01b039091168152602090f35b346101635760203660031901126101635760043560a0515260016020526020604060a0512054604051908152f35b346101635760a05180600319360112610160576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101635760a051806003193601126101605760206040517f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c8152f35b34610163576020366003190112610163576020610264600435611938565b604051908152f35b34610163576020366003190112610163576020610299600435600052600560205260ff6040600020541690565b6040519015158152f35b346101635760a05180600319360112610160576020604051601e8152f35b6040366003190112610163576024600435813567ffffffffffffffff8111610163576102f1903690600401611433565b6102fc92919261163b565b8160a051526020906006825260ff604060a0512054166105995763ffffffff93600392858454821c16866103348160a0515416611861565b16811461053c5794938590859060a051967f0000000000000000000000000000000000000000000000000000000000000000935b60a051938b8554168c8b16908110156103f357916103b7637fffffff928e94600198898516156000146103e3575090806103a183611938565b9260a05152898c52604060a05120555b896116c8565b951c1698168a81146103cc5760010197610368565b8b634e487b7160e01b60a05152601160045260a051fd5b52878a52604060a05120546103b1565b508a91508c898989938f885490601e8161040e818516611887565b160616809163ffffffff191617895560a0515260028552604060a051205561043585611887565b875467ffffffff00000000191690851b67ffffffff000000001617875560a08051879052600685525160408120805460ff1916600190811790915597905b8381106104b55788887fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e360408a8a82519182524290820152a260045560a05180f35b8760a0515260078652604060a051206104cf82868661162b565b6001600160a01b03919035828116919082900361016357805490600160401b821015610525578161050a918e610520979695940181556115c0565b9092835491871b92831b921b1916179055611606565b610473565b88634e487b7160e01b60a05152604160045260a051fd5b60405162461bcd60e51b8152600481018390526030818a01527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608490fd5b60405162461bcd60e51b8152600481018390526021818701527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608490fd5b346101635760203660031901126101635760043560a0515260096020526020604060a0512054604051908152f35b346101635760203660031901126101635760043560a0515260026020526020604060a0512054604051908152f35b346101635760a051806003193601126101605763ffffffff60035416905260026020526020604060a0512054604051908152f35b34610163576020806003193601126101635760043567ffffffffffffffff8111610163576106a9903690600401611433565b906106b382611538565b906106c1604051928361149b565b8282526106cd83611538565b8285019390601f190136853760a0515b81811061072b5750505090604051928392818401908285525180915260408401929160a0515b82811061071257505050500390f35b8351151585528695509381019392810192600101610703565b8061075261073d61075b93858761162b565b35600052600560205260ff6040600020541690565b61076057611606565b6106dd565b600161076c828761169e565b52611606565b346101635760a0518060031936011261016057602063ffffffff60035416604051908152f35b34610163576060366003190112610163576004356001600160a01b03811681036101635761026460209160443590602435906116c8565b346101635760203660031901126101635760043560a051526006602052602060ff604060a0512054166040519015158152f35b346101635760403660031901126101635760243560043560a05152600760205260a0516040812090815483101561016057602061083f84846115c0565b905460405160039290921b1c6001600160a01b03168152f35b3461016357602036600319011261016357602061029960043561189c565b346101635760a051806003193601126101605763ffffffff6020915416604051908152f35b346101635760c03660031901126101635767ffffffffffffffff6024803560043583821161016357366023830112156101635781600401359084821161016357368483850101116101635760443593606435956108f6611522565b9360a43591821161016357610921610915610929933690600401611433565b979092853692016114bd565b953691611550565b9161093261163b565b8660a051526020946005865260ff604060a051205416610c4d576109558761189c565b15610c0957856109bf916040519861096c8a611469565b89528189018a90526001600160a01b039687166040808b0182905260a0805160608d0152805160808d01528051908c01525163695ef6f960e01b815260e0600482015290999093849260e484019061165e565b9086830160a051905b60068210610bf057505050818060a051920391897f0000000000000000000000000000000000000000000000000000000000000000165af1908115610ac85760a05191610bd3575b5015610b965760a0515b8160a0515260078652604060a051208054821015610ad5579086610a73610a428389956115c0565b905490610a4f858a61169e565b519060405196878095819463c16e50ef60e01b83528860048401528c83019061165e565b039360a0519260031b1c165af1918215610ac857610a9692610a9b575b50611606565b610a1a565b610aba90883d8a11610ac1575b610ab2818361149b565b8101906115ee565b5089610a90565b503d610aa8565b6040513d60a051823e3d90fd5b5050849250856044917fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f60608a8060a0515260058852604060a05120600160ff198254161790556040519085825288820152426040820152a1600160045560a0515260098452604060a05120549460085416604051958694859363a9059cbb60e01b8552600485015283015260a051905af18015610ac857610b78575b60a05180f35b81610b8e92903d10610ac157610ab2818361149b565b508080610b72565b60405162461bcd60e51b8152600481018690526016818401527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b610bea9150863d8811610ac157610ab2818361149b565b88610a10565b825181528b9587955092830192600190920191016109c8565b60405162461bcd60e51b815260048101879052601c818501527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b60405162461bcd60e51b815260048101879052601f818501527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b346101635760a051806003193601126101605760206040517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018152f35b60c036600319011261016357602460043567ffffffffffffffff823581811161016357610cff903690600401611504565b9260443590606435610d0f611522565b9360a435908111610163573660238201121561016357610d389036908481600401359101611550565b92610d4161163b565b8160a051526020966005885260ff604060a051205416610fd157610d648261189c565b15610f8d5787610dce9160405193610d7b85611469565b84528184018590526001600160a01b03978816604080860182905260a080516060880152805160808801528051908701525163695ef6f960e01b815260e0600482015290949093849260e484019061165e565b9087830160a051905b60068210610f7457505050818060a0519203918a7f0000000000000000000000000000000000000000000000000000000000000000165af1908115610ac85760a05191610f57575b5015610f1a5760a0515b8660a0515260078852604060a051208054821015610ebf579088610e82610e51838a956115c0565b905490610e5e858b61169e565b519060405196878095819463c16e50ef60e01b83528860048401528d83019061165e565b039360a0519260031b1c165af1918215610ac857610ea492610ea95750611606565b610e29565b610aba908a3d8c11610ac157610ab2818361149b565b7fc9381739885105c55110a955860bd1927a8b28916a2a2b3fbbadbb2657ff948f606084868c8160a0515260058152604060a05120600160ff19825416179055604051928352820152426040820152a1600160045560a05180f35b60405162461bcd60e51b8152600481018890526016818501527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606490fd5b610f6e9150883d8a11610ac157610ab2818361149b565b88610e1f565b825181528d958795509283019260019092019101610dd7565b60405162461bcd60e51b815260048101899052601c818601527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606490fd5b60405162461bcd60e51b815260048101899052601f818601527f546865206e6f746520686173206265656e20616c7265616479207370656e74006044820152606490fd5b606036600319011261016357602460c05260243560443567ffffffffffffffff811161016357611049903690600401611433565b909161105361163b565b60043560a05152600660205260ff604060a05120541661136f5763ffffffff918260805260039383855460201c16936110908160a0515416611861565b1684146113115783926004359560a051945b60805160a05198818a5416828916101561115e57637fffffff92916111159160019b8c8516156000146111485750806110dc838c16611938565b928b1660a051528c602052604060a05120555b7f00000000000000000000000000000000000000000000000000000000000000006116c8565b981c169460805180911690811461112f57600101946110a2565b634e487b7160e01b60a05152601160045260c05160a051fd5b90918a1690528a602052604060a05120546110ef565b8389878988948454608051601e81611177818516611887565b160616809163ffffffff191617865560a051526002602052604060a051205561119f83611887565b67ffffffff0000000085549160201b169067ffffffff00000000191617845560043560a05152600660205260a0519360408520946001958660ff198254161790555b82811061129f57505050506040519081524260208201527fee825d3f4d0fa209d8e2a39afe24a21286d8dc103d63061a2ed322db4ce018e3604060043592a26004556064602060018060a01b0360085416604051928380926323b872dd60e01b82523360048301523060c05183015286604483015260a051905af18015610ac857611280575b5060043560a05152600960205260a05190604082205580f35b6112989060203d602011610ac157610ab2818361149b565b5081611267565b60043560a051526007602052604060a05120906112bd81858761162b565b6001600160a01b0390358181169081900361016357835493600160401b8510156112f8578461050a918b6112f3970181556115c0565b6111e1565b634e487b7160e01b60a05152604160045260c05160a051fd5b608460405162461bcd60e51b815260206004820152603060c0518201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152fd5b608460405162461bcd60e51b815260206004820152602160c0518201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152fd5b346101635760a05180600319360112610160576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461142f57602036600319011261142f5760ff604060209360043581526005855220541615158152f35b5080fd5b9181601f840112156114645782359167ffffffffffffffff8311611464576020808501948460051b01011161146457565b600080fd5b60c0810190811067ffffffffffffffff82111761148557604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761148557604052565b92919267ffffffffffffffff821161148557604051916114e7601f8201601f19166020018461149b565b829481845281830111611464578281602093846000960137010152565b9080601f830112156114645781602061151f933591016114bd565b90565b608435906001600160a01b038216820361146457565b67ffffffffffffffff81116114855760051b60200190565b9291909261155d84611538565b9161156b604051938461149b565b829480845260208094019060051b8301928284116114645780915b84831061159557505050505050565b823567ffffffffffffffff81116114645786916115b58684938601611504565b815201920191611586565b80548210156115d85760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90816020910312611464575180151581036114645790565b60001981146116155760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156115d85760051b0190565b60026004541461164c576002600455565b604051633ee5aeb560e01b8152600490fd5b919082519283825260005b84811061168a575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611669565b80518210156115d85760209160051b010190565b9190826040910312611464576020825192015190565b92917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001938483101561181d57848210156117ce5760018060a01b031693604090815163f47d33b560e01b94858252600482015260009485602483015283826044818b5afa9788156117c4578697988596979389916117a2575b506044939486519889968795865208600484015260248301525afa928315611797579261176d57505090565b61178c9250803d10611790575b611784818361149b565b8101906116b2565b5090565b503d61177a565b9051903d90823e3d90fd5b604494506117bd9150863d881161179057611784818361149b565b9093611741565b84513d88823e3d90fd5b60405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152fd5b80156118815760ff8111611615576001901b9063ffffffff821161161557565b50600190565b90600163ffffffff8093160191821161161557565b80156119325763ffffffff8060035416918260019384805b6118c4575b505050505050600090565b15611923575b6000908481169081835260026020526040832054851461191a57859115611912575b1680156118fe576000190190856118b4565b634e487b7160e01b82526011600452602482fd5b50601e6118ec565b50505050505090565b81848216036118ca57806118b9565b50600090565b8061196257507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c90565b6001810361198f57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d90565b600281036119bc57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c20090565b600381036119e957507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb90565b60048103611a1657507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c990565b60058103611a4357507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb5495990565b60068103611a7057507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c90565b60078103611a9d57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb490565b60088103611aca57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff8090565b60098103611af657507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c00790565b600a8103611b2357507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e3090565b600b8103611b5057507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e590565b600c8103611b7d57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f90565b600d8103611baa57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd90565b600e8103611bd757507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb10890565b600f8103611c0457507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b690565b60108103611c3157507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db6185490565b60118103611c5e57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea90565b60128103611c8b57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d90565b60138103611cb857507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc0590565b60148103611ce557507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d490565b60158103611d1257507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b296790565b60168103611d3f57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc345390565b60178103611d6c57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c4890565b60188103611d9957507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd190565b60198103611dc657507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c90565b601a8103611df357507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce9990565b601b8103611e2057507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f35490565b601c8103611e4c57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d90565b601d8103611e7957507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f42790565b601e8103611ea657507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb90565b601f03611ed1577f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc90565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fdfea2646970667358221220be82f51901b52f85b44c84591e1f9d66b71f0df4cfb030023e1c16d5f3f6118b64736f6c63430008140033";

type ERC20TransferConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TransferConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Transfer__factory extends ContractFactory {
  constructor(...args: ERC20TransferConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      _token,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _merkleTreeHeight: BigNumberish,
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _hasher,
      _merkleTreeHeight,
      _token,
      overrides || {}
    ) as Promise<
      ERC20Transfer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Transfer__factory {
    return super.connect(runner) as ERC20Transfer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TransferInterface {
    return new Interface(_abi) as ERC20TransferInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20Transfer {
    return new Contract(address, _abi, runner) as unknown as ERC20Transfer;
  }
}
